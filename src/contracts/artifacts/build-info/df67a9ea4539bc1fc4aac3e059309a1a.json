{
  "id": "df67a9ea4539bc1fc4aac3e059309a1a",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.4",
  "solcLongVersion": "0.8.4+commit.c7e474f2",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/FomoOE.sol": {
        "content": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ncontract FomoOE {\n    address developer;\n    uint public developerOnePercent;\n    uint public giveToDeveloper;\n    uint public giveToJackpot;\n    uint public startTime;\n    uint public totalTime;\n    uint public timeLeft;\n    address winning;\n    uint public balanceReceived;\n    uint public blockNumberOfLastKeyPurchase = block.number;\n    // uint public keyPrice = 100 wei;\n    // // Uncomment when testing is complete\n    uint public keyPrice = 3366666666666000 wei;\n    uint public prevKeyPrice = 3366666666666000 wei;\n    uint public nextKeyPrice;\n    uint[2] keyPrices;\n    // uint public keyPrice = 0.01 ether;\n\n    struct KeyPrices {\n        uint _currentKeyPrice;\n    }\n    mapping(uint => KeyPrices) public keyPriceTracker;\n\n    // // Uncomment when testing is complete\n    uint public totalKeys;\n    uint public keyPurchases;\n    uint public divPool;\n    uint public jackpot;\n\n    struct Divvies {\n        uint _keyBalance;\n        uint _divBalance;\n        uint _withdrawnAmount;\n        bool _voted;\n        bool _boughtKeys;\n    }\n\n    mapping(address => Divvies) public divTracker;\n    event keysPurchased(uint _userKeyBalance, uint _totalKeys, uint _keyPrice, uint _divPool, uint _jackpot, address _winning);\n    event userDivvies(uint _userDivvies);\n    event contractBalance(uint _balanceReceived);\n    event currentKeyPrice(uint keyPrice);\n    \n\n    constructor() {\n        developer = msg.sender;\n    }\n    // function restartGame() public {\n    //     require(getTimeLeft() == 0, \"game is still in play\");\n    //     require(msg.sender == winning, \"you are not the winner\");\n    //     letTheGamesBegin();\n    // }\n    function letTheGamesBegin() private {\n        // Uncomment when testing is complete\n        // keyPriceTracker[block.number]._currentKeyPrice = 3366666666666000 wei;\n        totalTime = block.timestamp + 86400;\n        // Uncomment when testing is complete\n        // totalTime = block.timestamp + 60;\n    }\n    function getTimeLeft() public view returns(uint) {\n        if (totalKeys == 0) {\n            return 86400;\n        }\n        if (totalTime >= block.timestamp) {\n            return totalTime - block.timestamp;\n        } else {\n            return 0;\n        }\n    }\n    function purchaseKeys(uint _amount) public payable {\n        if (totalKeys == 0) {\n            letTheGamesBegin();\n        }\n        require(getTimeLeft() > 0, \"there is already a winner\");\n        // bool firstBuyerOfBlock;\n        if (msg.value >= keyPrice*_amount) {\n            if (keyPurchases < 500) {\n                uint numerator = keyPrice*100;\n                keyPrice = keyPrice + numerator/10000;\n            } else {\n                uint numerator = keyPrice*50;\n                keyPrice = keyPrice + numerator/10000;\n            }\n            // firstBuyerOfBlock = true;\n        } else {\n            // firstBuyerOfBlock = false;\n            uint numerator = keyPrice*100;\n            uint tempKeyPrice = keyPrice - numerator/10000;\n            require(msg.value >= tempKeyPrice*_amount, \"Not enough to buy the key(s).\");\n        }\n\n        uint devShareNumerator = msg.value*100;\n        uint devShare = devShareNumerator/10000;\n        uint gameShare = msg.value - devShare;\n        uint floor = gameShare/2;\n        developerOnePercent += devShare;\n        jackpot += floor;\n        divPool += gameShare - floor; \n        divTracker[msg.sender]._keyBalance += _amount;\n        divTracker[msg.sender]._boughtKeys = true;\n        totalKeys += _amount;\n        if (_amount*30 > 86400 - (totalTime-block.timestamp)) {\n            // totalTime = 86400 + block.timestamp;\n            letTheGamesBegin();\n        } else {\n            totalTime += _amount*30;\n        }\n\n        keyPurchases += 1;\n        winning = msg.sender;\n        emit keysPurchased(divTracker[msg.sender]._keyBalance, totalKeys, keyPrice, divPool, jackpot, winning);\n        blockNumberOfLastKeyPurchase = block.number;   \n    } \n    // function purchaseKeys(uint _amount) public payable {\n    //     // require(msg.value >= keyPrice*_amount, \"not enough to buy the key(s).\");\n    //     if (totalKeys == 0) {\n    //         letTheGamesBegin();\n    //     }\n    //     require(getTimeLeft() > 0, \"there is already a winner\");\n\n    //     // if (block.number <= blockNumberOfLastKeyPurchase) {\n    //     //     prevKeyPrice = keyPrice;\n    //     //     require(msg.value >= prevKeyPrice, \"In the same block as another player, but you need to pay more.\");\n    //     // } else {\n    //     //     uint numerator = keyPrice*100;\n    //     //     keyPrice = keyPrice + numerator/10000;\n    //     //     require(msg.value >= keyPrice, \"In a later block, but you need to pay more.\");\n    //     // }\n    //     keyPrices[0] = keyPrice;\n    //     require(msg.value >= keyPrices[0]*_amount, \"Not enough to buy the key(s).\");\n    //     uint devShareNumerator = msg.value*100;\n    //     uint devShare = devShareNumerator/10000;\n    //     uint gameShare = msg.value - devShare;\n    //     uint floor = gameShare/2;\n    //     developerOnePercent += devShare;\n    //     jackpot += floor;\n    //     divPool += gameShare - floor; \n    //     divTracker[msg.sender]._keyBalance += _amount;\n    //     divTracker[msg.sender]._boughtKeys = true;\n    //     totalKeys += _amount;\n    //     if (_amount*30 > 86400 - (totalTime-block.timestamp)) {\n    //         // totalTime = 86400 + block.timestamp;\n    //         letTheGamesBegin();\n    //     } else {\n    //         totalTime += _amount*30;\n    //     }\n        \n    //     if (keyPurchases < 500) {\n    //         uint numerator = keyPrice*100;\n    //         keyPrices[1] = keyPrice + numerator/10000;\n    //     } else {\n    //         uint numerator = keyPrice*50;\n    //         keyPrices[1] = keyPrice + numerator/10000;\n    //     }\n\n    //     keyPurchases += 1;\n    //     winning = msg.sender;\n    //     emit keysPurchased(divTracker[msg.sender]._keyBalance, totalKeys, keyPrice, divPool, jackpot, winning);\n    //     blockNumberOfLastKeyPurchase = block.number;   \n    // } \n\n    function getWinner() public view returns(address) {\n        return winning;\n    }\n    \n    function updateDivvies(address _userAddress) public view returns(uint) {\n        uint tempUserWithdrawAmount;\n        uint tempNumerator;\n        if (totalKeys == 0 ) {\n            tempUserWithdrawAmount = 0;\n        } else {\n            // example to reference, but solidity can't do decimals\n            // // tempUserKeyProportion = divTracker[_userAddress]._keyBalance/totalKeys;\n            // // tempUserWithdrawAmount = tempUserKeyProportion*divPool - divTracker[_userAddress]._withdrawnAmount;\n\n            tempNumerator = divTracker[_userAddress]._keyBalance * divPool;\n            tempUserWithdrawAmount = tempNumerator/totalKeys - divTracker[_userAddress]._withdrawnAmount;  \n        }  \n        return tempUserWithdrawAmount;\n    }\n    \n    function withdrawDivvies() public {\n        address payable to = payable(msg.sender);\n        uint tempUserWithdrawAmount;\n        uint tempNumerator;\n        if (totalKeys == 0 ) {\n            tempUserWithdrawAmount = 0;\n        } else {\n            // example to reference, but solidity can't do decimals\n            // // tempUserKeyProportion = divTracker[_userAddress]._keyBalance/totalKeys;\n            // // tempUserWithdrawAmount = tempUserKeyProportion*divPool - divTracker[_userAddress]._withdrawnAmount;\n\n            tempNumerator = divTracker[msg.sender]._keyBalance * divPool;\n            tempUserWithdrawAmount = tempNumerator/totalKeys - divTracker[msg.sender]._withdrawnAmount;\n            divTracker[msg.sender]._withdrawnAmount += tempUserWithdrawAmount;\n        }  \n        require(tempUserWithdrawAmount > 0, \"You have no divvies to claim\");\n        to.transfer(tempUserWithdrawAmount);\n    }\n\n    function jackpotPayout() public {\n        require(getTimeLeft() == 0, \"game is still in play\");\n        require(jackpot > 0, \"No money in jackpot\");\n        require(msg.sender == winning, \"you are not the winner\");\n        address payable to = payable(winning);\n        to.transfer(jackpot);\n        jackpot = 0;\n    }\n\n    function whoWon(address _userAddress) public view returns(address winner){\n        if (getTimeLeft() == 0 && _userAddress == winning) {\n            winner = _userAddress;\n            return winner;\n        }\n    }\n\n    function developerOnePercentAllocation() public {\n        require(msg.sender == developer, \"you aren't the developer of this contract.\");\n        require(getTimeLeft() == 0, \"game is still in play\");\n        if (giveToDeveloper >= giveToJackpot) {\n            address payable to = payable(developer);\n            to.transfer(developerOnePercent);\n            \n        } else {\n            address payable to = payable(winning);\n            to.transfer(developerOnePercent);\n        }\n        developerOnePercent = 0;\n    }\n\n    function voteForOnePercent(bool _vote) public {\n        require(divTracker[msg.sender]._boughtKeys == true, \"you need to buy at least one key to vote.\");\n        require(divTracker[msg.sender]._voted == false, \"you already voted.\");\n        divTracker[msg.sender]._voted = true;\n        if (_vote == true) {\n            giveToDeveloper += 1;\n        } else {\n            giveToJackpot += 1;\n        }\n    }\n\n}\n\n\n\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/FomoOE.sol": {
        "FomoOE": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_balanceReceived",
                  "type": "uint256"
                }
              ],
              "name": "contractBalance",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "keyPrice",
                  "type": "uint256"
                }
              ],
              "name": "currentKeyPrice",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_userKeyBalance",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_totalKeys",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_keyPrice",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_divPool",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_jackpot",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "_winning",
                  "type": "address"
                }
              ],
              "name": "keysPurchased",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_userDivvies",
                  "type": "uint256"
                }
              ],
              "name": "userDivvies",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "balanceReceived",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "blockNumberOfLastKeyPurchase",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "developerOnePercent",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "developerOnePercentAllocation",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "divPool",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "divTracker",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "_keyBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_divBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_withdrawnAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "_voted",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "_boughtKeys",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTimeLeft",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getWinner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "giveToDeveloper",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "giveToJackpot",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "jackpot",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "jackpotPayout",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "keyPrice",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "keyPriceTracker",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "_currentKeyPrice",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "keyPurchases",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "nextKeyPrice",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "prevKeyPrice",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "purchaseKeys",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "startTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "timeLeft",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalKeys",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_userAddress",
                  "type": "address"
                }
              ],
              "name": "updateDivvies",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "_vote",
                  "type": "bool"
                }
              ],
              "name": "voteForOnePercent",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_userAddress",
                  "type": "address"
                }
              ],
              "name": "whoWon",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "winner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdrawDivvies",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405243600955660bf5f72abe6810600a55660bf5f72abe6810600b5534801561002a57600080fd5b50600080546001600160a01b03191633179055610ecd8061004c6000396000f3fe6080604052600436106101815760003560e01c80636b31ee01116100d15780638b80016b1161008a578063acf7084a11610064578063acf7084a14610429578063c7e284b814610449578063d20bff021461045e578063e5618fa91461047357600080fd5b80638b80016b146103df5780638e7ea5b2146103f557806392c5c06e1461041357600080fd5b80636b31ee011461035e57806378c3171f1461037457806378e97925146103875780637c2be5dd1461039d5780637d58e38f146103b357806382f96499146103c957600080fd5b80632bd4c3a71161013e57806352a90c421161011857806352a90c42146102a257806355fcbbff146102b857806358533e0a146103325780635daa424d1461034857600080fd5b80632bd4c3a71461024957806332b123f41461025f578063488bdabc1461028c57600080fd5b80630d153c921461018657806310e56973146101c3578063111d3efb146101e75780631300a6d1146102095780631ebe585d1461021f5780631fd9300d14610234575b600080fd5b34801561019257600080fd5b506101a66101a1366004610dad565b610489565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101cf57600080fd5b506101d9600a5481565b6040519081526020016101ba565b3480156101f357600080fd5b50610207610202366004610ddb565b6104bb565b005b34801561021557600080fd5b506101d960065481565b34801561022b57600080fd5b506102076105fa565b34801561024057600080fd5b50610207610715565b34801561025557600080fd5b506101d960095481565b34801561026b57600080fd5b506101d961027a366004610dfb565b600f6020526000908152604090205481565b34801561029857600080fd5b506101d960105481565b3480156102ae57600080fd5b506101d960085481565b3480156102c457600080fd5b506103066102d3366004610dad565b60146020526000908152604090208054600182015460028301546003909301549192909160ff8082169161010090041685565b60408051958652602086019490945292840191909152151560608301521515608082015260a0016101ba565b34801561033e57600080fd5b506101d960055481565b34801561035457600080fd5b506101d9600b5481565b34801561036a57600080fd5b506101d960135481565b610207610382366004610dfb565b610865565b34801561039357600080fd5b506101d960045481565b3480156103a957600080fd5b506101d960125481565b3480156103bf57600080fd5b506101d9600c5481565b3480156103d557600080fd5b506101d960035481565b3480156103eb57600080fd5b506101d960015481565b34801561040157600080fd5b506007546001600160a01b03166101a6565b34801561041f57600080fd5b506101d960115481565b34801561043557600080fd5b506101d9610444366004610dad565b610bb6565b34801561045557600080fd5b506101d9610c36565b34801561046a57600080fd5b50610207610c6d565b34801561047f57600080fd5b506101d960025481565b6000610493610c36565b1580156104ad57506007546001600160a01b038381169116145b156104b6575090565b919050565b3360009081526014602052604090206003015460ff61010090910416151560011461053f5760405162461bcd60e51b815260206004820152602960248201527f796f75206e65656420746f20627579206174206c65617374206f6e65206b6579604482015268103a37903b37ba329760b91b60648201526084015b60405180910390fd5b3360009081526014602052604090206003015460ff16156105975760405162461bcd60e51b81526020600482015260126024820152713cb7ba9030b63932b0b23c903b37ba32b21760711b6044820152606401610536565b336000908152601460205260409020600301805460ff1916600190811790915581151514156105de576001600260008282546105d39190610e13565b909155506105f79050565b6001600360008282546105f19190610e13565b90915550505b50565b601054339060009081906106115760009150610689565b6012543360009081526014602052604090205461062e9190610e4b565b33600090815260146020526040902060020154601054919250906106529083610e2b565b61065c9190610e6a565b33600090815260146020526040812060020180549294508492909190610683908490610e13565b90915550505b600082116106d95760405162461bcd60e51b815260206004820152601c60248201527f596f752068617665206e6f206469767669657320746f20636c61696d000000006044820152606401610536565b6040516001600160a01b0384169083156108fc029084906000818181858888f1935050505015801561070f573d6000803e3d6000fd5b50505050565b6000546001600160a01b031633146107825760405162461bcd60e51b815260206004820152602a60248201527f796f75206172656e27742074686520646576656c6f706572206f6620746869736044820152691031b7b73a3930b1ba1760b11b6064820152608401610536565b61078a610c36565b156107cf5760405162461bcd60e51b815260206004820152601560248201527467616d65206973207374696c6c20696e20706c617960581b6044820152606401610536565b6003546002541061081e57600080546001546040516001600160a01b0390921692839282156108fc029291818181858888f19350505050158015610817573d6000803e3d6000fd5b505061085e565b6007546001546040516001600160a01b0390921691829180156108fc02916000818181858888f1935050505015801561085b573d6000803e3d6000fd5b50505b6000600155565b60105461087457610874610d9b565b600061087e610c36565b116108cb5760405162461bcd60e51b815260206004820152601960248201527f746865726520697320616c726561647920612077696e6e6572000000000000006044820152606401610536565b80600a546108d99190610e4b565b3410610931576101f46011541015610920576000600a5460646108fc9190610e4b565b905061090a61271082610e2b565b600a546109179190610e13565b600a55506109bd565b6000600a5460326108fc9190610e4b565b6000600a5460646109429190610e4b565b9050600061095261271083610e2b565b600a5461095f9190610e6a565b905061096b8382610e4b565b3410156109ba5760405162461bcd60e51b815260206004820152601d60248201527f4e6f7420656e6f75676820746f2062757920746865206b65792873292e0000006044820152606401610536565b50505b60006109ca346064610e4b565b905060006109da61271083610e2b565b905060006109e88234610e6a565b905060006109f7600283610e2b565b90508260016000828254610a0b9190610e13565b925050819055508060136000828254610a249190610e13565b90915550610a3490508183610e6a565b60126000828254610a459190610e13565b90915550503360009081526014602052604081208054879290610a69908490610e13565b9091555050336000908152601460205260408120600301805461ff00191661010017905560108054879290610a9f908490610e13565b9091555050600554610ab2904290610e6a565b610abf9062015180610e6a565b610aca86601e610e4b565b1115610add57610ad8610d9b565b610aff565b610ae885601e610e4b565b60056000828254610af99190610e13565b90915550505b600160116000828254610b129190610e13565b9091555050600780546001600160a01b031916339081179091556000818152601460205260409081902054601054600a5460125460135494517ff18df1d3dbefaeb22f0e4efe18d279a090ed7b0a9be1c27b33cda2f677ca67d496610ba3969195865260208601949094526040850192909252606084015260808301526001600160a01b031660a082015260c00190565b60405180910390a1505043600955505050565b600080600060105460001415610bcf5760009150610c2f565b6012546001600160a01b038516600090815260146020526040902054610bf59190610e4b565b6001600160a01b03851660009081526014602052604090206002015460105491925090610c229083610e2b565b610c2c9190610e6a565b91505b5092915050565b600060105460001415610c4b57506201518090565b4260055410610c675742600554610c629190610e6a565b905090565b50600090565b610c75610c36565b15610cba5760405162461bcd60e51b815260206004820152601560248201527467616d65206973207374696c6c20696e20706c617960581b6044820152606401610536565b600060135411610d025760405162461bcd60e51b8152602060048201526013602482015272139bc81b5bdb995e481a5b881a9858dadc1bdd606a1b6044820152606401610536565b6007546001600160a01b03163314610d555760405162461bcd60e51b81526020600482015260166024820152753cb7ba9030b932903737ba103a3432903bb4b73732b960511b6044820152606401610536565b6007546013546040516001600160a01b0390921691829180156108fc02916000818181858888f19350505050158015610d92573d6000803e3d6000fd5b50506000601355565b610da84262015180610e13565b600555565b600060208284031215610dbe578081fd5b81356001600160a01b0381168114610dd4578182fd5b9392505050565b600060208284031215610dec578081fd5b81358015158114610dd4578182fd5b600060208284031215610e0c578081fd5b5035919050565b60008219821115610e2657610e26610e81565b500190565b600082610e4657634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610e6557610e65610e81565b500290565b600082821015610e7c57610e7c610e81565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220ceb365d605278b0043d2fd451af8622ecb9db814f1170267458e52ef6d3d390c64736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE NUMBER PUSH1 0x9 SSTORE PUSH7 0xBF5F72ABE6810 PUSH1 0xA SSTORE PUSH7 0xBF5F72ABE6810 PUSH1 0xB SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0xECD DUP1 PUSH2 0x4C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x181 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B31EE01 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8B80016B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xACF7084A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xACF7084A EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0xC7E284B8 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0xD20BFF02 EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0xE5618FA9 EQ PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8B80016B EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x8E7EA5B2 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x92C5C06E EQ PUSH2 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6B31EE01 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x78C3171F EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x7C2BE5DD EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x7D58E38F EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0x82F96499 EQ PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2BD4C3A7 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x52A90C42 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x52A90C42 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x55FCBBFF EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x58533E0A EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x5DAA424D EQ PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2BD4C3A7 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x32B123F4 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x488BDABC EQ PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD153C92 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x10E56973 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x111D3EFB EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x1300A6D1 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x1EBE585D EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x1FD9300D EQ PUSH2 0x234 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0xDAD JUMP JUMPDEST PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x207 PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0xDDB JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x207 PUSH2 0x5FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x207 PUSH2 0x715 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0xDFB JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x1BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x207 PUSH2 0x382 CALLDATASIZE PUSH1 0x4 PUSH2 0xDFB JUMP JUMPDEST PUSH2 0x865 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x444 CALLDATASIZE PUSH1 0x4 PUSH2 0xDAD JUMP JUMPDEST PUSH2 0xBB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0xC36 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x207 PUSH2 0xC6D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x493 PUSH2 0xC36 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x4AD JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x4B6 JUMPI POP SWAP1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x53F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F75206E65656420746F20627579206174206C65617374206F6E65206B6579 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103A37903B37BA3297 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x3CB7BA9030B63932B0B23C903B37BA32B217 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x536 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x5DE JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5D3 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x5F7 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x10 SLOAD CALLER SWAP1 PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x611 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x689 JUMP JUMPDEST PUSH1 0x12 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x62E SWAP2 SWAP1 PUSH2 0xE4B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x10 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x652 SWAP1 DUP4 PUSH2 0xE2B JUMP JUMPDEST PUSH2 0x65C SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP3 SWAP5 POP DUP5 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x683 SWAP1 DUP5 SWAP1 PUSH2 0xE13 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x6D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F206469767669657320746F20636C61696D00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x70F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x782 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F75206172656E27742074686520646576656C6F706572206F662074686973 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1031B7B73A3930B1BA17 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x536 JUMP JUMPDEST PUSH2 0x78A PUSH2 0xC36 JUMP JUMPDEST ISZERO PUSH2 0x7CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x67616D65206973207374696C6C20696E20706C6179 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD LT PUSH2 0x81E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP4 SWAP3 DUP3 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x817 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH2 0x85E JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 SWAP2 DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x85B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x874 JUMPI PUSH2 0x874 PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87E PUSH2 0xC36 JUMP JUMPDEST GT PUSH2 0x8CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746865726520697320616C726561647920612077696E6E657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x536 JUMP JUMPDEST DUP1 PUSH1 0xA SLOAD PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0xE4B JUMP JUMPDEST CALLVALUE LT PUSH2 0x931 JUMPI PUSH2 0x1F4 PUSH1 0x11 SLOAD LT ISZERO PUSH2 0x920 JUMPI PUSH1 0x0 PUSH1 0xA SLOAD PUSH1 0x64 PUSH2 0x8FC SWAP2 SWAP1 PUSH2 0xE4B JUMP JUMPDEST SWAP1 POP PUSH2 0x90A PUSH2 0x2710 DUP3 PUSH2 0xE2B JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x917 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0xA SSTORE POP PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD PUSH1 0x32 PUSH2 0x8FC SWAP2 SWAP1 PUSH2 0xE4B JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD PUSH1 0x64 PUSH2 0x942 SWAP2 SWAP1 PUSH2 0xE4B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x952 PUSH2 0x2710 DUP4 PUSH2 0xE2B JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x95F SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST SWAP1 POP PUSH2 0x96B DUP4 DUP3 PUSH2 0xE4B JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x9BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820746F2062757920746865206B65792873292E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x536 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH2 0x9CA CALLVALUE PUSH1 0x64 PUSH2 0xE4B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9DA PUSH2 0x2710 DUP4 PUSH2 0xE2B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9E8 DUP3 CALLVALUE PUSH2 0xE6A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9F7 PUSH1 0x2 DUP4 PUSH2 0xE2B JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA0B SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x13 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA24 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xA34 SWAP1 POP DUP2 DUP4 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x12 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA45 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0xA69 SWAP1 DUP5 SWAP1 PUSH2 0xE13 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x10 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0xA9F SWAP1 DUP5 SWAP1 PUSH2 0xE13 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 SLOAD PUSH2 0xAB2 SWAP1 TIMESTAMP SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH2 0xABF SWAP1 PUSH3 0x15180 PUSH2 0xE6A JUMP JUMPDEST PUSH2 0xACA DUP7 PUSH1 0x1E PUSH2 0xE4B JUMP JUMPDEST GT ISZERO PUSH2 0xADD JUMPI PUSH2 0xAD8 PUSH2 0xD9B JUMP JUMPDEST PUSH2 0xAFF JUMP JUMPDEST PUSH2 0xAE8 DUP6 PUSH1 0x1E PUSH2 0xE4B JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAF9 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x11 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB12 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD PUSH1 0x10 SLOAD PUSH1 0xA SLOAD PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD SWAP5 MLOAD PUSH32 0xF18DF1D3DBEFAEB22F0E4EFE18D279A090ED7B0A9BE1C27B33CDA2F677CA67D4 SWAP7 PUSH2 0xBA3 SWAP7 SWAP2 SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP NUMBER PUSH1 0x9 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x10 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xBCF JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBF5 SWAP2 SWAP1 PUSH2 0xE4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x10 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xC22 SWAP1 DUP4 PUSH2 0xE2B JUMP JUMPDEST PUSH2 0xC2C SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xC4B JUMPI POP PUSH3 0x15180 SWAP1 JUMP JUMPDEST TIMESTAMP PUSH1 0x5 SLOAD LT PUSH2 0xC67 JUMPI TIMESTAMP PUSH1 0x5 SLOAD PUSH2 0xC62 SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xC75 PUSH2 0xC36 JUMP JUMPDEST ISZERO PUSH2 0xCBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x67616D65206973207374696C6C20696E20706C6179 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x13 SLOAD GT PUSH2 0xD02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x139BC81B5BDB995E481A5B881A9858DADC1BDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x3CB7BA9030B932903737BA103A3432903BB4B73732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 SWAP2 DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 PUSH1 0x13 SSTORE JUMP JUMPDEST PUSH2 0xDA8 TIMESTAMP PUSH3 0x15180 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDBE JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDD4 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDEC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDD4 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0C JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xE26 JUMPI PUSH2 0xE26 PUSH2 0xE81 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE46 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE65 JUMPI PUSH2 0xE65 PUSH2 0xE81 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xE7C JUMPI PUSH2 0xE7C PUSH2 0xE81 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xB3 PUSH6 0xD605278B0043 0xD2 REVERT GASLIMIT BYTE 0xF8 PUSH3 0x2ECB9D 0xB8 EQ CALL OR MUL PUSH8 0x458E52EF6D3D390C PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "57:9287:0:-:0;;;380:12;337:55;;505:20;482:43;;558:20;531:47;;1426:53;;;;;;;;;-1:-1:-1;1450:9:0;:22;;-1:-1:-1;;;;;;1450:22:0;1462:10;1450:22;;;57:9287;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:6335:1",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:1",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "84:236:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "130:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "139:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "147:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "132:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "132:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "132:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "105:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "114:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "101:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "101:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "126:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "97:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "97:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "94:2:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "165:36:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "191:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "178:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "178:23:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "169:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "264:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "273:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "281:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "266:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "266:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "266:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "223:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "234:5:1"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "249:3:1",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "254:1:1",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "245:3:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "245:11:1"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "258:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "241:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "241:19:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "230:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "230:31:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "220:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "220:42:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "213:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "213:50:1"
                              },
                              "nodeType": "YulIf",
                              "src": "210:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "299:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "309:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "299:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "50:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "61:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "73:6:1",
                            "type": ""
                          }
                        ],
                        "src": "14:306:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "392:226:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "438:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "447:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "455:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "440:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "440:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "440:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "413:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "422:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "409:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "409:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "434:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "405:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "405:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "402:2:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "473:36:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "499:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "486:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "486:23:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "477:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "562:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "571:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "579:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "564:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "564:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "564:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "531:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "552:5:1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "545:6:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "545:13:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "538:6:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "538:21:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "528:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "528:32:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "521:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "521:40:1"
                              },
                              "nodeType": "YulIf",
                              "src": "518:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "597:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "607:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "597:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "358:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "369:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "381:6:1",
                            "type": ""
                          }
                        ],
                        "src": "325:293:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "693:120:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "739:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "748:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "756:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "741:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "741:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "741:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "714:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "723:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "710:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "710:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "735:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "706:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "706:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "703:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "774:33:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "797:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "784:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "784:23:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "774:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "659:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "670:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "682:6:1",
                            "type": ""
                          }
                        ],
                        "src": "623:190:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "919:102:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "929:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "941:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "952:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "937:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "937:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "929:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "971:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "986:6:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1002:3:1",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1007:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "998:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "998:11:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1011:1:1",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "994:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "994:19:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "982:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "982:32:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "964:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "964:51:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "964:51:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "888:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "899:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "910:4:1",
                            "type": ""
                          }
                        ],
                        "src": "818:203:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1200:171:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1217:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1228:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1210:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1210:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1210:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1251:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1262:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1247:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1247:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1267:2:1",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1240:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1240:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1240:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1290:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1301:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1286:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1286:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1306:23:1",
                                    "type": "",
                                    "value": "game is still in play"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1279:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1279:51:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1279:51:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1339:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1351:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1362:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1347:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1347:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1339:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_189b26b2dc90a204b6258fd8aaa92fc58bf3fc8bae348d1855018a313099dab4__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1177:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1191:4:1",
                            "type": ""
                          }
                        ],
                        "src": "1026:345:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1550:172:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1567:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1578:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1560:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1560:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1560:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1601:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1612:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1597:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1597:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1617:2:1",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1590:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1590:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1590:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1640:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1651:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1636:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1636:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1656:24:1",
                                    "type": "",
                                    "value": "you are not the winner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1629:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1629:52:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1629:52:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1690:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1702:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1713:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1698:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1698:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1690:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_1bb9b6f0233d18f6ea56f6ba6b39bdcd37958431528a8ef0e15c119c52254f5e__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1527:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1541:4:1",
                            "type": ""
                          }
                        ],
                        "src": "1376:346:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1901:175:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1918:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1929:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1911:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1911:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1911:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1952:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1963:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1948:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1948:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1968:2:1",
                                    "type": "",
                                    "value": "25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1941:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1941:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1941:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1991:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2002:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1987:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1987:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2007:27:1",
                                    "type": "",
                                    "value": "there is already a winner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1980:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1980:55:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1980:55:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2044:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2056:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2067:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2052:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2052:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2044:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_522c06332c3de9bbe77db16d47eb909f2bc05d4550177dd87ecc47156f36abbb__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1878:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1892:4:1",
                            "type": ""
                          }
                        ],
                        "src": "1727:349:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2255:178:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2272:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2283:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2265:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2265:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2265:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2306:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2317:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2302:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2302:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2322:2:1",
                                    "type": "",
                                    "value": "28"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2295:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2295:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2295:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2345:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2356:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2341:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2341:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2361:30:1",
                                    "type": "",
                                    "value": "You have no divvies to claim"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2334:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2334:58:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2334:58:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2401:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2413:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2424:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2409:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2409:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2401:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_8f0a5b00b8225a5e8198f4e874c9e02f62342eac6069582c6a91ffd83caaf530__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2232:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2246:4:1",
                            "type": ""
                          }
                        ],
                        "src": "2081:352:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2612:168:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2629:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2640:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2622:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2622:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2622:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2663:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2674:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2659:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2659:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2679:2:1",
                                    "type": "",
                                    "value": "18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2652:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2652:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2652:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2702:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2713:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2698:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2698:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2718:20:1",
                                    "type": "",
                                    "value": "you already voted."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2691:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2691:48:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2691:48:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2748:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2760:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2771:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2756:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2756:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2748:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_b0bde71531240fa9938bc3386428f288c19e834e2b513235e9318a8bad7680dc__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2589:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2603:4:1",
                            "type": ""
                          }
                        ],
                        "src": "2438:342:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2959:169:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2976:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2987:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2969:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2969:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2969:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3010:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3021:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3006:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3006:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3026:2:1",
                                    "type": "",
                                    "value": "19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2999:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2999:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2999:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3049:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3060:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3045:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3045:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3065:21:1",
                                    "type": "",
                                    "value": "No money in jackpot"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3038:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3038:49:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3038:49:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3096:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3108:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3119:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3104:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3104:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3096:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_bd5506de9cb58dacf5247236c502bc897ec13592d240dce45ccaa50c52ed207a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2936:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2950:4:1",
                            "type": ""
                          }
                        ],
                        "src": "2785:343:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3307:232:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3324:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3335:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3317:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3317:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3317:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3358:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3369:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3354:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3354:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3374:2:1",
                                    "type": "",
                                    "value": "42"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3347:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3347:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3347:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3397:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3408:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3393:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3393:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3413:34:1",
                                    "type": "",
                                    "value": "you aren't the developer of this"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3386:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3386:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3386:62:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3468:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3479:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3464:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3464:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3484:12:1",
                                    "type": "",
                                    "value": " contract."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3457:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3457:40:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3457:40:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3506:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3518:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3529:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3514:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3514:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3506:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_cea86a2191cad1e0f0f217b0db1aab60b763877b2f41d4c4c8de22dc3f188de7__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3284:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3298:4:1",
                            "type": ""
                          }
                        ],
                        "src": "3133:406:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3718:231:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3735:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3746:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3728:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3728:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3728:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3769:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3780:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3765:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3765:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3785:2:1",
                                    "type": "",
                                    "value": "41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3758:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3758:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3758:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3808:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3819:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3804:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3804:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3824:34:1",
                                    "type": "",
                                    "value": "you need to buy at least one key"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3797:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3797:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3797:62:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3879:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3890:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3875:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3875:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3895:11:1",
                                    "type": "",
                                    "value": " to vote."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3868:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3868:39:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3868:39:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3916:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3928:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3939:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3924:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3924:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3916:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e01b75adec200db3e90481f4ca7d93ac9212b95e491be39172190fceb9c96be3__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3695:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3709:4:1",
                            "type": ""
                          }
                        ],
                        "src": "3544:405:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4128:179:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4145:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4156:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4138:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4138:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4138:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4179:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4190:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4175:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4175:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4195:2:1",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4168:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4168:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4168:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4218:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4229:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4214:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4214:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4234:31:1",
                                    "type": "",
                                    "value": "Not enough to buy the key(s)."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4207:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4207:59:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4207:59:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4275:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4287:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4298:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4283:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4283:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4275:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e4a2642d6743116ecdc050df980057ba474cd036421d9a84b9a5cbacffa1d5b0__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4105:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4119:4:1",
                            "type": ""
                          }
                        ],
                        "src": "3954:353:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4413:76:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4423:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4435:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4446:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4431:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4431:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4423:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4465:9:1"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4476:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4458:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4458:25:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4458:25:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4382:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4393:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4404:4:1",
                            "type": ""
                          }
                        ],
                        "src": "4312:177:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4695:282:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4705:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4717:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4728:3:1",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4713:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4713:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4705:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4748:9:1"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4759:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4741:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4741:25:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4741:25:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4786:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4797:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4782:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4782:18:1"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4802:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4775:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4775:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4775:34:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4829:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4840:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4825:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4825:18:1"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "4845:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4818:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4818:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4818:34:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4872:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4883:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4868:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4868:18:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value3",
                                            "nodeType": "YulIdentifier",
                                            "src": "4902:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "4895:6:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4895:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "4888:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4888:22:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4861:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4861:50:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4861:50:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4931:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4942:3:1",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4927:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4927:19:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value4",
                                            "nodeType": "YulIdentifier",
                                            "src": "4962:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "4955:6:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4955:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "4948:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4948:22:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4920:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4920:51:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4920:51:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4632:9:1",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "4643:6:1",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "4651:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "4659:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4667:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4675:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4686:4:1",
                            "type": ""
                          }
                        ],
                        "src": "4494:483:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5223:320:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5233:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5245:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5256:3:1",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5241:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5241:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5233:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5276:9:1"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5287:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5269:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5269:25:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5269:25:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5314:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5325:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5310:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5310:18:1"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5330:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5303:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5303:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5303:34:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5357:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5368:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5353:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5353:18:1"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5373:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5346:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5346:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5346:34:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5400:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5411:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5396:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5396:18:1"
                                  },
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "5416:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5389:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5389:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5389:34:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5443:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5454:3:1",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5439:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5439:19:1"
                                  },
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "5460:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5432:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5432:35:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5432:35:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5487:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5498:3:1",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5483:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5483:19:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value5",
                                        "nodeType": "YulIdentifier",
                                        "src": "5508:6:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "5524:3:1",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "5529:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "5520:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5520:11:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5533:1:1",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "5516:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5516:19:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "5504:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5504:32:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5476:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5476:61:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5476:61:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5152:9:1",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "5163:6:1",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "5171:6:1",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "5179:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "5187:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5195:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5203:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5214:4:1",
                            "type": ""
                          }
                        ],
                        "src": "4982:561:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5596:80:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5623:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5625:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5625:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5625:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "5612:1:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "5619:1:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "5615:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5615:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5609:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5609:13:1"
                              },
                              "nodeType": "YulIf",
                              "src": "5606:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5654:16:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "5665:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "5668:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5661:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5661:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "5654:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "5579:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "5582:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "5588:3:1",
                            "type": ""
                          }
                        ],
                        "src": "5548:128:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5727:171:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5758:111:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "r",
                                          "nodeType": "YulIdentifier",
                                          "src": "5779:1:1"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "5786:3:1",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "5791:10:1",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "5782:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5782:20:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "5772:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5772:31:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5772:31:1"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5823:1:1",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5826:4:1",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "5816:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5816:15:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5816:15:1"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "r",
                                          "nodeType": "YulIdentifier",
                                          "src": "5851:1:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5854:4:1",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5844:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5844:15:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5844:15:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "5747:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5740:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5740:9:1"
                              },
                              "nodeType": "YulIf",
                              "src": "5737:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5878:14:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "5887:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "5890:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "5883:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5883:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "5878:1:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "5712:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "5715:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "5721:1:1",
                            "type": ""
                          }
                        ],
                        "src": "5681:217:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5955:116:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6014:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6016:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6016:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6016:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "5986:1:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "5979:6:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5979:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "5972:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5972:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "5994:1:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "6005:1:1",
                                                "type": "",
                                                "value": "0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "6001:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "6001:6:1"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "6009:1:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "5997:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5997:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "5991:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5991:21:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "5968:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5968:45:1"
                              },
                              "nodeType": "YulIf",
                              "src": "5965:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6045:20:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "6060:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "6063:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "6056:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6056:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "6045:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "5934:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "5937:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "5943:7:1",
                            "type": ""
                          }
                        ],
                        "src": "5903:168:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6125:76:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6147:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6149:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6149:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6149:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "6141:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "6144:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6138:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6138:8:1"
                              },
                              "nodeType": "YulIf",
                              "src": "6135:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6178:17:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "6190:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "6193:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "6186:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6186:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "6178:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "6107:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "6110:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "6116:4:1",
                            "type": ""
                          }
                        ],
                        "src": "6076:125:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6238:95:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6255:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6262:3:1",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6267:10:1",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "6258:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6258:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6248:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6248:31:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6248:31:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6295:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6298:4:1",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6288:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6288:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6288:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6319:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6322:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "6312:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6312:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6312:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "6206:127:1"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_189b26b2dc90a204b6258fd8aaa92fc58bf3fc8bae348d1855018a313099dab4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"game is still in play\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1bb9b6f0233d18f6ea56f6ba6b39bdcd37958431528a8ef0e15c119c52254f5e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"you are not the winner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_522c06332c3de9bbe77db16d47eb909f2bc05d4550177dd87ecc47156f36abbb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"there is already a winner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8f0a5b00b8225a5e8198f4e874c9e02f62342eac6069582c6a91ffd83caaf530__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"You have no divvies to claim\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b0bde71531240fa9938bc3386428f288c19e834e2b513235e9318a8bad7680dc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"you already voted.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bd5506de9cb58dacf5247236c502bc897ec13592d240dce45ccaa50c52ed207a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"No money in jackpot\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cea86a2191cad1e0f0f217b0db1aab60b763877b2f41d4c4c8de22dc3f188de7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"you aren't the developer of this\")\n        mstore(add(headStart, 96), \" contract.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e01b75adec200db3e90481f4ca7d93ac9212b95e491be39172190fceb9c96be3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"you need to buy at least one key\")\n        mstore(add(headStart, 96), \" to vote.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e4a2642d6743116ecdc050df980057ba474cd036421d9a84b9a5cbacffa1d5b0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Not enough to buy the key(s).\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), and(value5, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436106101815760003560e01c80636b31ee01116100d15780638b80016b1161008a578063acf7084a11610064578063acf7084a14610429578063c7e284b814610449578063d20bff021461045e578063e5618fa91461047357600080fd5b80638b80016b146103df5780638e7ea5b2146103f557806392c5c06e1461041357600080fd5b80636b31ee011461035e57806378c3171f1461037457806378e97925146103875780637c2be5dd1461039d5780637d58e38f146103b357806382f96499146103c957600080fd5b80632bd4c3a71161013e57806352a90c421161011857806352a90c42146102a257806355fcbbff146102b857806358533e0a146103325780635daa424d1461034857600080fd5b80632bd4c3a71461024957806332b123f41461025f578063488bdabc1461028c57600080fd5b80630d153c921461018657806310e56973146101c3578063111d3efb146101e75780631300a6d1146102095780631ebe585d1461021f5780631fd9300d14610234575b600080fd5b34801561019257600080fd5b506101a66101a1366004610dad565b610489565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101cf57600080fd5b506101d9600a5481565b6040519081526020016101ba565b3480156101f357600080fd5b50610207610202366004610ddb565b6104bb565b005b34801561021557600080fd5b506101d960065481565b34801561022b57600080fd5b506102076105fa565b34801561024057600080fd5b50610207610715565b34801561025557600080fd5b506101d960095481565b34801561026b57600080fd5b506101d961027a366004610dfb565b600f6020526000908152604090205481565b34801561029857600080fd5b506101d960105481565b3480156102ae57600080fd5b506101d960085481565b3480156102c457600080fd5b506103066102d3366004610dad565b60146020526000908152604090208054600182015460028301546003909301549192909160ff8082169161010090041685565b60408051958652602086019490945292840191909152151560608301521515608082015260a0016101ba565b34801561033e57600080fd5b506101d960055481565b34801561035457600080fd5b506101d9600b5481565b34801561036a57600080fd5b506101d960135481565b610207610382366004610dfb565b610865565b34801561039357600080fd5b506101d960045481565b3480156103a957600080fd5b506101d960125481565b3480156103bf57600080fd5b506101d9600c5481565b3480156103d557600080fd5b506101d960035481565b3480156103eb57600080fd5b506101d960015481565b34801561040157600080fd5b506007546001600160a01b03166101a6565b34801561041f57600080fd5b506101d960115481565b34801561043557600080fd5b506101d9610444366004610dad565b610bb6565b34801561045557600080fd5b506101d9610c36565b34801561046a57600080fd5b50610207610c6d565b34801561047f57600080fd5b506101d960025481565b6000610493610c36565b1580156104ad57506007546001600160a01b038381169116145b156104b6575090565b919050565b3360009081526014602052604090206003015460ff61010090910416151560011461053f5760405162461bcd60e51b815260206004820152602960248201527f796f75206e65656420746f20627579206174206c65617374206f6e65206b6579604482015268103a37903b37ba329760b91b60648201526084015b60405180910390fd5b3360009081526014602052604090206003015460ff16156105975760405162461bcd60e51b81526020600482015260126024820152713cb7ba9030b63932b0b23c903b37ba32b21760711b6044820152606401610536565b336000908152601460205260409020600301805460ff1916600190811790915581151514156105de576001600260008282546105d39190610e13565b909155506105f79050565b6001600360008282546105f19190610e13565b90915550505b50565b601054339060009081906106115760009150610689565b6012543360009081526014602052604090205461062e9190610e4b565b33600090815260146020526040902060020154601054919250906106529083610e2b565b61065c9190610e6a565b33600090815260146020526040812060020180549294508492909190610683908490610e13565b90915550505b600082116106d95760405162461bcd60e51b815260206004820152601c60248201527f596f752068617665206e6f206469767669657320746f20636c61696d000000006044820152606401610536565b6040516001600160a01b0384169083156108fc029084906000818181858888f1935050505015801561070f573d6000803e3d6000fd5b50505050565b6000546001600160a01b031633146107825760405162461bcd60e51b815260206004820152602a60248201527f796f75206172656e27742074686520646576656c6f706572206f6620746869736044820152691031b7b73a3930b1ba1760b11b6064820152608401610536565b61078a610c36565b156107cf5760405162461bcd60e51b815260206004820152601560248201527467616d65206973207374696c6c20696e20706c617960581b6044820152606401610536565b6003546002541061081e57600080546001546040516001600160a01b0390921692839282156108fc029291818181858888f19350505050158015610817573d6000803e3d6000fd5b505061085e565b6007546001546040516001600160a01b0390921691829180156108fc02916000818181858888f1935050505015801561085b573d6000803e3d6000fd5b50505b6000600155565b60105461087457610874610d9b565b600061087e610c36565b116108cb5760405162461bcd60e51b815260206004820152601960248201527f746865726520697320616c726561647920612077696e6e6572000000000000006044820152606401610536565b80600a546108d99190610e4b565b3410610931576101f46011541015610920576000600a5460646108fc9190610e4b565b905061090a61271082610e2b565b600a546109179190610e13565b600a55506109bd565b6000600a5460326108fc9190610e4b565b6000600a5460646109429190610e4b565b9050600061095261271083610e2b565b600a5461095f9190610e6a565b905061096b8382610e4b565b3410156109ba5760405162461bcd60e51b815260206004820152601d60248201527f4e6f7420656e6f75676820746f2062757920746865206b65792873292e0000006044820152606401610536565b50505b60006109ca346064610e4b565b905060006109da61271083610e2b565b905060006109e88234610e6a565b905060006109f7600283610e2b565b90508260016000828254610a0b9190610e13565b925050819055508060136000828254610a249190610e13565b90915550610a3490508183610e6a565b60126000828254610a459190610e13565b90915550503360009081526014602052604081208054879290610a69908490610e13565b9091555050336000908152601460205260408120600301805461ff00191661010017905560108054879290610a9f908490610e13565b9091555050600554610ab2904290610e6a565b610abf9062015180610e6a565b610aca86601e610e4b565b1115610add57610ad8610d9b565b610aff565b610ae885601e610e4b565b60056000828254610af99190610e13565b90915550505b600160116000828254610b129190610e13565b9091555050600780546001600160a01b031916339081179091556000818152601460205260409081902054601054600a5460125460135494517ff18df1d3dbefaeb22f0e4efe18d279a090ed7b0a9be1c27b33cda2f677ca67d496610ba3969195865260208601949094526040850192909252606084015260808301526001600160a01b031660a082015260c00190565b60405180910390a1505043600955505050565b600080600060105460001415610bcf5760009150610c2f565b6012546001600160a01b038516600090815260146020526040902054610bf59190610e4b565b6001600160a01b03851660009081526014602052604090206002015460105491925090610c229083610e2b565b610c2c9190610e6a565b91505b5092915050565b600060105460001415610c4b57506201518090565b4260055410610c675742600554610c629190610e6a565b905090565b50600090565b610c75610c36565b15610cba5760405162461bcd60e51b815260206004820152601560248201527467616d65206973207374696c6c20696e20706c617960581b6044820152606401610536565b600060135411610d025760405162461bcd60e51b8152602060048201526013602482015272139bc81b5bdb995e481a5b881a9858dadc1bdd606a1b6044820152606401610536565b6007546001600160a01b03163314610d555760405162461bcd60e51b81526020600482015260166024820152753cb7ba9030b932903737ba103a3432903bb4b73732b960511b6044820152606401610536565b6007546013546040516001600160a01b0390921691829180156108fc02916000818181858888f19350505050158015610d92573d6000803e3d6000fd5b50506000601355565b610da84262015180610e13565b600555565b600060208284031215610dbe578081fd5b81356001600160a01b0381168114610dd4578182fd5b9392505050565b600060208284031215610dec578081fd5b81358015158114610dd4578182fd5b600060208284031215610e0c578081fd5b5035919050565b60008219821115610e2657610e26610e81565b500190565b600082610e4657634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610e6557610e65610e81565b500290565b600082821015610e7c57610e7c610e81565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220ceb365d605278b0043d2fd451af8622ecb9db814f1170267458e52ef6d3d390c64736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x181 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B31EE01 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8B80016B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xACF7084A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xACF7084A EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0xC7E284B8 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0xD20BFF02 EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0xE5618FA9 EQ PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8B80016B EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x8E7EA5B2 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x92C5C06E EQ PUSH2 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6B31EE01 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x78C3171F EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x7C2BE5DD EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x7D58E38F EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0x82F96499 EQ PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2BD4C3A7 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x52A90C42 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x52A90C42 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x55FCBBFF EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x58533E0A EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x5DAA424D EQ PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2BD4C3A7 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x32B123F4 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x488BDABC EQ PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD153C92 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x10E56973 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x111D3EFB EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x1300A6D1 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x1EBE585D EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x1FD9300D EQ PUSH2 0x234 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0xDAD JUMP JUMPDEST PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x207 PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0xDDB JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x207 PUSH2 0x5FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x207 PUSH2 0x715 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0xDFB JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x1BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x207 PUSH2 0x382 CALLDATASIZE PUSH1 0x4 PUSH2 0xDFB JUMP JUMPDEST PUSH2 0x865 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x444 CALLDATASIZE PUSH1 0x4 PUSH2 0xDAD JUMP JUMPDEST PUSH2 0xBB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0xC36 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x207 PUSH2 0xC6D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x493 PUSH2 0xC36 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x4AD JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x4B6 JUMPI POP SWAP1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x53F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F75206E65656420746F20627579206174206C65617374206F6E65206B6579 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103A37903B37BA3297 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x3CB7BA9030B63932B0B23C903B37BA32B217 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x536 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x5DE JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5D3 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x5F7 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x10 SLOAD CALLER SWAP1 PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x611 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x689 JUMP JUMPDEST PUSH1 0x12 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x62E SWAP2 SWAP1 PUSH2 0xE4B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x10 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x652 SWAP1 DUP4 PUSH2 0xE2B JUMP JUMPDEST PUSH2 0x65C SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP3 SWAP5 POP DUP5 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x683 SWAP1 DUP5 SWAP1 PUSH2 0xE13 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x6D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F206469767669657320746F20636C61696D00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x70F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x782 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F75206172656E27742074686520646576656C6F706572206F662074686973 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1031B7B73A3930B1BA17 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x536 JUMP JUMPDEST PUSH2 0x78A PUSH2 0xC36 JUMP JUMPDEST ISZERO PUSH2 0x7CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x67616D65206973207374696C6C20696E20706C6179 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD LT PUSH2 0x81E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP4 SWAP3 DUP3 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x817 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH2 0x85E JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 SWAP2 DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x85B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x874 JUMPI PUSH2 0x874 PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87E PUSH2 0xC36 JUMP JUMPDEST GT PUSH2 0x8CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746865726520697320616C726561647920612077696E6E657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x536 JUMP JUMPDEST DUP1 PUSH1 0xA SLOAD PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0xE4B JUMP JUMPDEST CALLVALUE LT PUSH2 0x931 JUMPI PUSH2 0x1F4 PUSH1 0x11 SLOAD LT ISZERO PUSH2 0x920 JUMPI PUSH1 0x0 PUSH1 0xA SLOAD PUSH1 0x64 PUSH2 0x8FC SWAP2 SWAP1 PUSH2 0xE4B JUMP JUMPDEST SWAP1 POP PUSH2 0x90A PUSH2 0x2710 DUP3 PUSH2 0xE2B JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x917 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0xA SSTORE POP PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD PUSH1 0x32 PUSH2 0x8FC SWAP2 SWAP1 PUSH2 0xE4B JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD PUSH1 0x64 PUSH2 0x942 SWAP2 SWAP1 PUSH2 0xE4B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x952 PUSH2 0x2710 DUP4 PUSH2 0xE2B JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x95F SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST SWAP1 POP PUSH2 0x96B DUP4 DUP3 PUSH2 0xE4B JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x9BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820746F2062757920746865206B65792873292E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x536 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH2 0x9CA CALLVALUE PUSH1 0x64 PUSH2 0xE4B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9DA PUSH2 0x2710 DUP4 PUSH2 0xE2B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9E8 DUP3 CALLVALUE PUSH2 0xE6A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9F7 PUSH1 0x2 DUP4 PUSH2 0xE2B JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA0B SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x13 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA24 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xA34 SWAP1 POP DUP2 DUP4 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x12 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA45 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0xA69 SWAP1 DUP5 SWAP1 PUSH2 0xE13 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x10 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0xA9F SWAP1 DUP5 SWAP1 PUSH2 0xE13 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 SLOAD PUSH2 0xAB2 SWAP1 TIMESTAMP SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH2 0xABF SWAP1 PUSH3 0x15180 PUSH2 0xE6A JUMP JUMPDEST PUSH2 0xACA DUP7 PUSH1 0x1E PUSH2 0xE4B JUMP JUMPDEST GT ISZERO PUSH2 0xADD JUMPI PUSH2 0xAD8 PUSH2 0xD9B JUMP JUMPDEST PUSH2 0xAFF JUMP JUMPDEST PUSH2 0xAE8 DUP6 PUSH1 0x1E PUSH2 0xE4B JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAF9 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x11 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB12 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD PUSH1 0x10 SLOAD PUSH1 0xA SLOAD PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD SWAP5 MLOAD PUSH32 0xF18DF1D3DBEFAEB22F0E4EFE18D279A090ED7B0A9BE1C27B33CDA2F677CA67D4 SWAP7 PUSH2 0xBA3 SWAP7 SWAP2 SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP NUMBER PUSH1 0x9 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x10 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xBCF JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBF5 SWAP2 SWAP1 PUSH2 0xE4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x10 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xC22 SWAP1 DUP4 PUSH2 0xE2B JUMP JUMPDEST PUSH2 0xC2C SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xC4B JUMPI POP PUSH3 0x15180 SWAP1 JUMP JUMPDEST TIMESTAMP PUSH1 0x5 SLOAD LT PUSH2 0xC67 JUMPI TIMESTAMP PUSH1 0x5 SLOAD PUSH2 0xC62 SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xC75 PUSH2 0xC36 JUMP JUMPDEST ISZERO PUSH2 0xCBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x67616D65206973207374696C6C20696E20706C6179 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x13 SLOAD GT PUSH2 0xD02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x139BC81B5BDB995E481A5B881A9858DADC1BDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x3CB7BA9030B932903737BA103A3432903BB4B73732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 SWAP2 DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 PUSH1 0x13 SSTORE JUMP JUMPDEST PUSH2 0xDA8 TIMESTAMP PUSH3 0x15180 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDBE JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDD4 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDEC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDD4 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0C JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xE26 JUMPI PUSH2 0xE26 PUSH2 0xE81 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE46 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE65 JUMPI PUSH2 0xE65 PUSH2 0xE81 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xE7C JUMPI PUSH2 0xE7C PUSH2 0xE81 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xB3 PUSH6 0xD605278B0043 0xD2 REVERT GASLIMIT BYTE 0xF8 PUSH3 0x2ECB9D 0xB8 EQ CALL OR MUL PUSH8 0x458E52EF6D3D390C PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "57:9287:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8188:213;;;;;;;;;;-1:-1:-1;8188:213:0;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;982:32:1;;;964:51;;952:2;937:18;8188:213:0;;;;;;;;482:43;;;;;;;;;;;;;;;;;;;4458:25:1;;;4446:2;4431:18;482:43:0;4413:76:1;8935:406:0;;;;;;;;;;-1:-1:-1;8935:406:0;;;;;:::i;:::-;;:::i;:::-;;257:20;;;;;;;;;;;;;;;;6946:912;;;;;;;;;;;;;:::i;8407:522::-;;;;;;;;;;;;;:::i;337:55::-;;;;;;;;;;;;;;;;740:49;;;;;;;;;;-1:-1:-1;740:49:0;;;;;:::i;:::-;;;;;;;;;;;;;;841:21;;;;;;;;;;;;;;;;304:27;;;;;;;;;;;;;;;;1107:45;;;;;;;;;;-1:-1:-1;1107:45:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4741:25:1;;;4797:2;4782:18;;4775:34;;;;4825:18;;;4818:34;;;;4895:14;4888:22;4883:2;4868:18;;4861:50;4955:14;4948:22;4942:3;4927:19;;4920:51;4728:3;4713:19;1107:45:0;4695:282:1;230:21:0;;;;;;;;;;;;;;;;531:47;;;;;;;;;;;;;;;;923:19;;;;;;;;;;;;;;;;2277:1712;;;;;;:::i;:::-;;:::i;203:21::-;;;;;;;;;;;;;;;;898:19;;;;;;;;;;;;;;;;584:24;;;;;;;;;;;;;;;;172:25;;;;;;;;;;;;;;;;102:31;;;;;;;;;;;;;;;;6102:81;;;;;;;;;;-1:-1:-1;6169:7:0;;-1:-1:-1;;;;;6169:7:0;6102:81;;868:24;;;;;;;;;;;;;;;;6193:743;;;;;;;;;;-1:-1:-1;6193:743:0;;;;;:::i;:::-;;:::i;2009:263::-;;;;;;;;;;;;;:::i;7864:318::-;;;;;;;;;;;;;:::i;139:27::-;;;;;;;;;;;;;;;;8188:213;8246:14;8275:13;:11;:13::i;:::-;:18;:45;;;;-1:-1:-1;8313:7:0;;-1:-1:-1;;;;;8297:23:0;;;8313:7;;8297:23;8275:45;8271:124;;;-1:-1:-1;8345:12:0;8188:213::o;8271:124::-;8188:213;;;:::o;8935:406::-;9010:10;8999:22;;;;:10;:22;;;;;:34;;;;;;;;;:42;;:34;:42;8991:96;;;;-1:-1:-1;;;8991:96:0;;3746:2:1;8991:96:0;;;3728:21:1;3785:2;3765:18;;;3758:30;3824:34;3804:18;;;3797:62;-1:-1:-1;;;3875:18:1;;;3868:39;3924:19;;8991:96:0;;;;;;;;;9116:10;9105:22;;;;:10;:22;;;;;:29;;;;;:38;9097:69;;;;-1:-1:-1;;;9097:69:0;;2640:2:1;9097:69:0;;;2622:21:1;2679:2;2659:18;;;2652:30;-1:-1:-1;;;2698:18:1;;;2691:48;2756:18;;9097:69:0;2612:168:1;9097:69:0;9187:10;9176:22;;;;:10;:22;;;;;:29;;:36;;-1:-1:-1;;9176:36:0;9208:4;9176:36;;;;;;9226:13;;;;9222:113;;;9274:1;9255:15;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;9222:113:0;;-1:-1:-1;9222:113:0;;9323:1;9306:13;;:18;;;;;;;:::i;:::-;;;;-1:-1:-1;;9222:113:0;8935:406;:::o;6946:912::-;7109:9;;7019:10;;6990:18;;;;7105:623;;7165:1;7140:26;;7105:623;;;7527:7;;7501:10;7490:22;;;;:10;:22;;;;;:34;:44;;7527:7;7490:44;:::i;:::-;7610:10;7599:22;;;;:10;:22;;;;;:39;;;7587:9;;7474:60;;-1:-1:-1;7599:39:0;7573:23;;7474:60;7573:23;:::i;:::-;:65;;;;:::i;:::-;7663:10;7652:22;;;;:10;:22;;;;;:39;;:65;;7548:90;;-1:-1:-1;7548:90:0;;7652:39;;:22;:65;;7548:90;;7652:65;:::i;:::-;;;;-1:-1:-1;;7105:623:0;7772:1;7747:22;:26;7739:67;;;;-1:-1:-1;;;7739:67:0;;2283:2:1;7739:67:0;;;2265:21:1;2322:2;2302:18;;;2295:30;2361;2341:18;;;2334:58;2409:18;;7739:67:0;2255:178:1;7739:67:0;7816:35;;-1:-1:-1;;;;;7816:11:0;;;:35;;;;;7828:22;;7816:35;;;;7828:22;7816:11;:35;;;;;;;;;;;;;;;;;;;;;6946:912;;;:::o;8407:522::-;8487:9;;-1:-1:-1;;;;;8487:9:0;8473:10;:23;8465:78;;;;-1:-1:-1;;;8465:78:0;;3335:2:1;8465:78:0;;;3317:21:1;3374:2;3354:18;;;3347:30;3413:34;3393:18;;;3386:62;-1:-1:-1;;;3464:18:1;;;3457:40;3514:19;;8465:78:0;3307:232:1;8465:78:0;8561:13;:11;:13::i;:::-;:18;8553:52;;;;-1:-1:-1;;;8553:52:0;;1228:2:1;8553:52:0;;;1210:21:1;1267:2;1247:18;;;1240:30;-1:-1:-1;;;1286:18:1;;;1279:51;1347:18;;8553:52:0;1200:171:1;8553:52:0;8638:13;;8619:15;;:32;8615:275;;8667:18;8696:9;;;8732:19;8720:32;;-1:-1:-1;;;;;8696:9:0;;;;;;8720:32;;;;;8732:19;8720:32;8667:18;8720:32;8732:19;8696:9;8720:32;;;;;;;;;;;;;;;;;;;;;8615:275;;;;8825:7;;;8859:19;8847:32;;-1:-1:-1;;;;;8825:7:0;;;;;;8847:32;;;;;8796:18;8847:32;8796:18;8847:32;8859:19;8825:7;8847:32;;;;;;;;;;;;;;;;;;;;;8615:275;;8921:1;8899:19;:23;8407:522::o;2277:1712::-;2342:9;;2338:63;;2372:18;:16;:18::i;:::-;2434:1;2418:13;:11;:13::i;:::-;:17;2410:55;;;;-1:-1:-1;;;2410:55:0;;1929:2:1;2410:55:0;;;1911:21:1;1968:2;1948:18;;;1941:30;2007:27;1987:18;;;1980:55;2052:18;;2410:55:0;1901:175:1;2410:55:0;2536:7;2527:8;;:16;;;;:::i;:::-;2514:9;:29;2510:614;;2578:3;2563:12;;:18;2559:263;;;2601:14;2618:8;;2627:3;2618:12;;;;:::i;:::-;2601:29;-1:-1:-1;2670:15:0;2680:5;2601:29;2670:15;:::i;:::-;2659:8;;:26;;;;:::i;:::-;2648:8;:37;-1:-1:-1;2510:614:0;;2559:263;2724:14;2741:8;;2750:2;2741:11;;;;:::i;2510:614::-;2935:14;2952:8;;2961:3;2952:12;;;;:::i;:::-;2935:29;-1:-1:-1;2978:17:0;3009:15;3019:5;2935:29;3009:15;:::i;:::-;2998:8;;:26;;;;:::i;:::-;2978:46;-1:-1:-1;3059:20:0;3072:7;2978:46;3059:20;:::i;:::-;3046:9;:33;;3038:75;;;;-1:-1:-1;;;3038:75:0;;4156:2:1;3038:75:0;;;4138:21:1;4195:2;4175:18;;;4168:30;4234:31;4214:18;;;4207:59;4283:18;;3038:75:0;4128:179:1;3038:75:0;2510:614;;;3134:22;3159:13;:9;3169:3;3159:13;:::i;:::-;3134:38;-1:-1:-1;3182:13:0;3198:23;3216:5;3134:38;3198:23;:::i;:::-;3182:39;-1:-1:-1;3231:14:0;3248:20;3182:39;3248:9;:20;:::i;:::-;3231:37;-1:-1:-1;3278:10:0;3291:11;3301:1;3231:37;3291:11;:::i;:::-;3278:24;;3335:8;3312:19;;:31;;;;;;;:::i;:::-;;;;;;;;3364:5;3353:7;;:16;;;;;;;:::i;:::-;;;;-1:-1:-1;3390:17:0;;-1:-1:-1;3402:5:0;3390:9;:17;:::i;:::-;3379:7;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;3429:10:0;3418:22;;;;:10;:22;;;;;:45;;3456:7;;3418:22;:45;;3456:7;;3418:45;:::i;:::-;;;;-1:-1:-1;;3484:10:0;3473:22;;;;:10;:22;;;;;:34;;:41;;-1:-1:-1;;3473:41:0;;;;;3524:9;:20;;3537:7;;3473:22;3524:20;;3537:7;;3524:20;:::i;:::-;;;;-1:-1:-1;;3580:9:0;;:25;;3590:15;;3580:25;:::i;:::-;3571:35;;:5;:35;:::i;:::-;3558:10;:7;3566:2;3558:10;:::i;:::-;:48;3554:203;;;3674:18;:16;:18::i;:::-;3554:203;;;3736:10;:7;3744:2;3736:10;:::i;:::-;3723:9;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;;3554:203:0;3783:1;3767:12;;:17;;;;;;;:::i;:::-;;;;-1:-1:-1;;3794:7:0;:20;;-1:-1:-1;;;;;;3794:20:0;3804:10;3794:20;;;;;;:7;3843:22;;;:10;:22;;;;;;;:34;3879:9;;3890:8;;3900:7;;3909;;3829:97;;;;;;3909:7;5269:25:1;;;5325:2;5310:18;;5303:34;;;;5368:2;5353:18;;5346:34;;;;5411:2;5396:18;;5389:34;5454:3;5439:19;;5432:35;-1:-1:-1;;;;;5504:32:1;5524:3;5483:19;;5476:61;5256:3;5241:19;;5223:320;3829:97:0;;;;;;;;-1:-1:-1;;3967:12:0;3936:28;:43;-1:-1:-1;;;2277:1712:0:o;6193:743::-;6258:4;6274:27;6311:18;6343:9;;6356:1;6343:14;6339:550;;;6399:1;6374:26;;6339:550;;;6763:7;;-1:-1:-1;;;;;6724:24:0;;;;;;:10;:24;;;;;:36;:46;;6763:7;6724:46;:::i;:::-;-1:-1:-1;;;;;6835:24:0;;;;;;:10;:24;;;;;:41;;;6823:9;;6708:62;;-1:-1:-1;6835:41:0;6809:23;;6708:62;6809:23;:::i;:::-;:67;;;;:::i;:::-;6784:92;;6339:550;-1:-1:-1;6907:22:0;6193:743;-1:-1:-1;;6193:743:0:o;2009:263::-;2052:4;2072:9;;2085:1;2072:14;2068:57;;;-1:-1:-1;2109:5:0;;2009:263::o;2068:57::-;2151:15;2138:9;;:28;2134:132;;2201:15;2189:9;;:27;;;;:::i;:::-;2182:34;;2009:263;:::o;2134:132::-;-1:-1:-1;2254:1:0;;2009:263::o;7864:318::-;7914:13;:11;:13::i;:::-;:18;7906:52;;;;-1:-1:-1;;;7906:52:0;;1228:2:1;7906:52:0;;;1210:21:1;1267:2;1247:18;;;1240:30;-1:-1:-1;;;1286:18:1;;;1279:51;1347:18;;7906:52:0;1200:171:1;7906:52:0;7986:1;7976:7;;:11;7968:43;;;;-1:-1:-1;;;7968:43:0;;2987:2:1;7968:43:0;;;2969:21:1;3026:2;3006:18;;;2999:30;-1:-1:-1;;;3045:18:1;;;3038:49;3104:18;;7968:43:0;2959:169:1;7968:43:0;8043:7;;-1:-1:-1;;;;;8043:7:0;8029:10;:21;8021:56;;;;-1:-1:-1;;;8021:56:0;;1578:2:1;8021:56:0;;;1560:21:1;1617:2;1597:18;;;1590:30;-1:-1:-1;;;1636:18:1;;;1629:52;1698:18;;8021:56:0;1550:172:1;8021:56:0;8116:7;;8146;;8134:20;;-1:-1:-1;;;;;8116:7:0;;;;;;8134:20;;;;;8087:18;8134:20;8087:18;8134:20;8146:7;8116;8134:20;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8174:1:0;8164:7;:11;7864:318::o;1697:307::-;1883:23;:15;1901:5;1883:23;:::i;:::-;1871:9;:35;1697:307::o;14:306:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:1;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:1:o;325:293::-;381:6;434:2;422:9;413:7;409:23;405:32;402:2;;;455:6;447;440:22;402:2;499:9;486:23;552:5;545:13;538:21;531:5;528:32;518:2;;579:6;571;564:22;623:190;682:6;735:2;723:9;714:7;710:23;706:32;703:2;;;756:6;748;741:22;703:2;-1:-1:-1;784:23:1;;693:120;-1:-1:-1;693:120:1:o;5548:128::-;5588:3;5619:1;5615:6;5612:1;5609:13;5606:2;;;5625:18;;:::i;:::-;-1:-1:-1;5661:9:1;;5596:80::o;5681:217::-;5721:1;5747;5737:2;;-1:-1:-1;;;5772:31:1;;5826:4;5823:1;5816:15;5854:4;5779:1;5844:15;5737:2;-1:-1:-1;5883:9:1;;5727:171::o;5903:168::-;5943:7;6009:1;6005;6001:6;5997:14;5994:1;5991:21;5986:1;5979:9;5972:17;5968:45;5965:2;;;6016:18;;:::i;:::-;-1:-1:-1;6056:9:1;;5955:116::o;6076:125::-;6116:4;6144:1;6141;6138:8;6135:2;;;6149:18;;:::i;:::-;-1:-1:-1;6186:9:1;;6125:76::o;6206:127::-;6267:10;6262:3;6258:20;6255:1;6248:31;6298:4;6295:1;6288:15;6322:4;6319:1;6312:15"
            },
            "methodIdentifiers": {
              "balanceReceived()": "52a90c42",
              "blockNumberOfLastKeyPurchase()": "2bd4c3a7",
              "developerOnePercent()": "8b80016b",
              "developerOnePercentAllocation()": "1fd9300d",
              "divPool()": "7c2be5dd",
              "divTracker(address)": "55fcbbff",
              "getTimeLeft()": "c7e284b8",
              "getWinner()": "8e7ea5b2",
              "giveToDeveloper()": "e5618fa9",
              "giveToJackpot()": "82f96499",
              "jackpot()": "6b31ee01",
              "jackpotPayout()": "d20bff02",
              "keyPrice()": "10e56973",
              "keyPriceTracker(uint256)": "32b123f4",
              "keyPurchases()": "92c5c06e",
              "nextKeyPrice()": "7d58e38f",
              "prevKeyPrice()": "5daa424d",
              "purchaseKeys(uint256)": "78c3171f",
              "startTime()": "78e97925",
              "timeLeft()": "1300a6d1",
              "totalKeys()": "488bdabc",
              "totalTime()": "58533e0a",
              "updateDivvies(address)": "acf7084a",
              "voteForOnePercent(bool)": "111d3efb",
              "whoWon(address)": "0d153c92",
              "withdrawDivvies()": "1ebe585d"
            }
          }
        }
      }
    },
    "sources": {
      "contracts/FomoOE.sol": {
        "ast": {
          "absolutePath": "contracts/FomoOE.sol",
          "exportedSymbols": {
            "FomoOE": [
              639
            ]
          },
          "id": 640,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 639,
              "linearizedBaseContracts": [
                639
              ],
              "name": "FomoOE",
              "nameLocation": "66:6:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 3,
                  "mutability": "mutable",
                  "name": "developer",
                  "nameLocation": "87:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "79:17:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "79:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "8b80016b",
                  "id": 5,
                  "mutability": "mutable",
                  "name": "developerOnePercent",
                  "nameLocation": "114:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "102:31:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "102:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "e5618fa9",
                  "id": 7,
                  "mutability": "mutable",
                  "name": "giveToDeveloper",
                  "nameLocation": "151:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "139:27:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "139:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "82f96499",
                  "id": 9,
                  "mutability": "mutable",
                  "name": "giveToJackpot",
                  "nameLocation": "184:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "172:25:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "172:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "78e97925",
                  "id": 11,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "215:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "203:21:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "203:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "58533e0a",
                  "id": 13,
                  "mutability": "mutable",
                  "name": "totalTime",
                  "nameLocation": "242:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "230:21:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "230:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "1300a6d1",
                  "id": 15,
                  "mutability": "mutable",
                  "name": "timeLeft",
                  "nameLocation": "269:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "257:20:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "257:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 17,
                  "mutability": "mutable",
                  "name": "winning",
                  "nameLocation": "291:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "283:15:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "283:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "52a90c42",
                  "id": 19,
                  "mutability": "mutable",
                  "name": "balanceReceived",
                  "nameLocation": "316:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "304:27:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "304:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "2bd4c3a7",
                  "id": 23,
                  "mutability": "mutable",
                  "name": "blockNumberOfLastKeyPurchase",
                  "nameLocation": "349:28:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "337:55:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "337:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "expression": {
                      "id": 21,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "380:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "number",
                    "nodeType": "MemberAccess",
                    "src": "380:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "10e56973",
                  "id": 26,
                  "mutability": "mutable",
                  "name": "keyPrice",
                  "nameLocation": "494:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "482:43:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "33333636363636363636363636303030",
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "505:20:0",
                    "subdenomination": "wei",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3366666666666000_by_1",
                      "typeString": "int_const 3366666666666000"
                    },
                    "value": "3366666666666000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "5daa424d",
                  "id": 29,
                  "mutability": "mutable",
                  "name": "prevKeyPrice",
                  "nameLocation": "543:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "531:47:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "531:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "33333636363636363636363636303030",
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "558:20:0",
                    "subdenomination": "wei",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3366666666666000_by_1",
                      "typeString": "int_const 3366666666666000"
                    },
                    "value": "3366666666666000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7d58e38f",
                  "id": 31,
                  "mutability": "mutable",
                  "name": "nextKeyPrice",
                  "nameLocation": "596:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "584:24:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "keyPrices",
                  "nameLocation": "622:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "614:17:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_storage",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 32,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "614:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 34,
                    "length": {
                      "hexValue": "32",
                      "id": 33,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "619:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "614:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "canonicalName": "FomoOE.KeyPrices",
                  "id": 38,
                  "members": [
                    {
                      "constant": false,
                      "id": 37,
                      "mutability": "mutable",
                      "name": "_currentKeyPrice",
                      "nameLocation": "712:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 38,
                      "src": "707:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 36,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "707:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "KeyPrices",
                  "nameLocation": "687:9:0",
                  "nodeType": "StructDefinition",
                  "scope": 639,
                  "src": "680:55:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "32b123f4",
                  "id": 43,
                  "mutability": "mutable",
                  "name": "keyPriceTracker",
                  "nameLocation": "774:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "740:49:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_KeyPrices_$38_storage_$",
                    "typeString": "mapping(uint256 => struct FomoOE.KeyPrices)"
                  },
                  "typeName": {
                    "id": 42,
                    "keyType": {
                      "id": 39,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "748:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "740:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_KeyPrices_$38_storage_$",
                      "typeString": "mapping(uint256 => struct FomoOE.KeyPrices)"
                    },
                    "valueType": {
                      "id": 41,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 40,
                        "name": "KeyPrices",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 38,
                        "src": "756:9:0"
                      },
                      "referencedDeclaration": 38,
                      "src": "756:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_KeyPrices_$38_storage_ptr",
                        "typeString": "struct FomoOE.KeyPrices"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "488bdabc",
                  "id": 45,
                  "mutability": "mutable",
                  "name": "totalKeys",
                  "nameLocation": "853:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "841:21:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "841:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "92c5c06e",
                  "id": 47,
                  "mutability": "mutable",
                  "name": "keyPurchases",
                  "nameLocation": "880:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "868:24:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "868:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7c2be5dd",
                  "id": 49,
                  "mutability": "mutable",
                  "name": "divPool",
                  "nameLocation": "910:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "898:19:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "898:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "6b31ee01",
                  "id": 51,
                  "mutability": "mutable",
                  "name": "jackpot",
                  "nameLocation": "935:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "923:19:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "923:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "FomoOE.Divvies",
                  "id": 62,
                  "members": [
                    {
                      "constant": false,
                      "id": 53,
                      "mutability": "mutable",
                      "name": "_keyBalance",
                      "nameLocation": "979:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 62,
                      "src": "974:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "974:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 55,
                      "mutability": "mutable",
                      "name": "_divBalance",
                      "nameLocation": "1005:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 62,
                      "src": "1000:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1000:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 57,
                      "mutability": "mutable",
                      "name": "_withdrawnAmount",
                      "nameLocation": "1031:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 62,
                      "src": "1026:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 56,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1026:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 59,
                      "mutability": "mutable",
                      "name": "_voted",
                      "nameLocation": "1062:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 62,
                      "src": "1057:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 58,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1057:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 61,
                      "mutability": "mutable",
                      "name": "_boughtKeys",
                      "nameLocation": "1083:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 62,
                      "src": "1078:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 60,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1078:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Divvies",
                  "nameLocation": "956:7:0",
                  "nodeType": "StructDefinition",
                  "scope": 639,
                  "src": "949:152:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "55fcbbff",
                  "id": 67,
                  "mutability": "mutable",
                  "name": "divTracker",
                  "nameLocation": "1142:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "1107:45:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Divvies_$62_storage_$",
                    "typeString": "mapping(address => struct FomoOE.Divvies)"
                  },
                  "typeName": {
                    "id": 66,
                    "keyType": {
                      "id": 63,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1115:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1107:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Divvies_$62_storage_$",
                      "typeString": "mapping(address => struct FomoOE.Divvies)"
                    },
                    "valueType": {
                      "id": 65,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 64,
                        "name": "Divvies",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 62,
                        "src": "1126:7:0"
                      },
                      "referencedDeclaration": 62,
                      "src": "1126:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Divvies_$62_storage_ptr",
                        "typeString": "struct FomoOE.Divvies"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 81,
                  "name": "keysPurchased",
                  "nameLocation": "1164:13:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 80,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 69,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_userKeyBalance",
                        "nameLocation": "1183:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 81,
                        "src": "1178:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 68,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1178:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 71,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_totalKeys",
                        "nameLocation": "1205:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 81,
                        "src": "1200:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 70,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1200:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 73,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_keyPrice",
                        "nameLocation": "1222:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 81,
                        "src": "1217:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 72,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1217:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 75,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_divPool",
                        "nameLocation": "1238:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 81,
                        "src": "1233:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 74,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1233:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 77,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_jackpot",
                        "nameLocation": "1253:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 81,
                        "src": "1248:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 76,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1248:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 79,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_winning",
                        "nameLocation": "1271:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 81,
                        "src": "1263:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 78,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1263:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1177:103:0"
                  },
                  "src": "1158:123:0"
                },
                {
                  "anonymous": false,
                  "id": 85,
                  "name": "userDivvies",
                  "nameLocation": "1292:11:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 84,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 83,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_userDivvies",
                        "nameLocation": "1309:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 85,
                        "src": "1304:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1304:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1303:19:0"
                  },
                  "src": "1286:37:0"
                },
                {
                  "anonymous": false,
                  "id": 89,
                  "name": "contractBalance",
                  "nameLocation": "1334:15:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 88,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 87,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_balanceReceived",
                        "nameLocation": "1355:16:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 89,
                        "src": "1350:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 86,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1350:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1349:23:0"
                  },
                  "src": "1328:45:0"
                },
                {
                  "anonymous": false,
                  "id": 93,
                  "name": "currentKeyPrice",
                  "nameLocation": "1384:15:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 92,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 91,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "keyPrice",
                        "nameLocation": "1405:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 93,
                        "src": "1400:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 90,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1400:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1399:15:0"
                  },
                  "src": "1378:37:0"
                },
                {
                  "body": {
                    "id": 101,
                    "nodeType": "Block",
                    "src": "1440:39:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 96,
                            "name": "developer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "1450:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 97,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1462:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 98,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1462:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1450:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 100,
                        "nodeType": "ExpressionStatement",
                        "src": "1450:22:0"
                      }
                    ]
                  },
                  "id": 102,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 94,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1437:2:0"
                  },
                  "returnParameters": {
                    "id": 95,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1440:0:0"
                  },
                  "scope": 639,
                  "src": "1426:53:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 112,
                    "nodeType": "Block",
                    "src": "1733:271:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 105,
                            "name": "totalTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "1871:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 106,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "1883:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "1883:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "3836343030",
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1901:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "value": "86400"
                            },
                            "src": "1883:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1871:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 111,
                        "nodeType": "ExpressionStatement",
                        "src": "1871:35:0"
                      }
                    ]
                  },
                  "id": 113,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "letTheGamesBegin",
                  "nameLocation": "1706:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 103,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1722:2:0"
                  },
                  "returnParameters": {
                    "id": 104,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1733:0:0"
                  },
                  "scope": 639,
                  "src": "1697:307:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 139,
                    "nodeType": "Block",
                    "src": "2058:214:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 118,
                            "name": "totalKeys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "2072:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2085:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2072:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 124,
                        "nodeType": "IfStatement",
                        "src": "2068:57:0",
                        "trueBody": {
                          "id": 123,
                          "nodeType": "Block",
                          "src": "2088:37:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "3836343030",
                                "id": 121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2109:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                },
                                "value": "86400"
                              },
                              "functionReturnParameters": 117,
                              "id": 122,
                              "nodeType": "Return",
                              "src": "2102:12:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 125,
                            "name": "totalTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "2138:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "id": 126,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2151:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2151:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2138:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 137,
                          "nodeType": "Block",
                          "src": "2233:33:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 135,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2254:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 117,
                              "id": 136,
                              "nodeType": "Return",
                              "src": "2247:8:0"
                            }
                          ]
                        },
                        "id": 138,
                        "nodeType": "IfStatement",
                        "src": "2134:132:0",
                        "trueBody": {
                          "id": 134,
                          "nodeType": "Block",
                          "src": "2168:59:0",
                          "statements": [
                            {
                              "expression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 129,
                                  "name": "totalTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "2189:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 130,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "2201:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 131,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "2201:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2189:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 117,
                              "id": 133,
                              "nodeType": "Return",
                              "src": "2182:34:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "c7e284b8",
                  "id": 140,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTimeLeft",
                  "nameLocation": "2018:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 114,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2029:2:0"
                  },
                  "returnParameters": {
                    "id": 117,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 116,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 140,
                        "src": "2052:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 115,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2052:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2051:6:0"
                  },
                  "scope": 639,
                  "src": "2009:263:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 338,
                    "nodeType": "Block",
                    "src": "2328:1661:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 145,
                            "name": "totalKeys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "2342:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2355:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2342:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 152,
                        "nodeType": "IfStatement",
                        "src": "2338:63:0",
                        "trueBody": {
                          "id": 151,
                          "nodeType": "Block",
                          "src": "2358:43:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 148,
                                  "name": "letTheGamesBegin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 113,
                                  "src": "2372:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 149,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2372:18:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 150,
                              "nodeType": "ExpressionStatement",
                              "src": "2372:18:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 154,
                                  "name": "getTimeLeft",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 140,
                                  "src": "2418:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 155,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2418:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 156,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2434:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2418:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "746865726520697320616c726561647920612077696e6e6572",
                              "id": 158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2437:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_522c06332c3de9bbe77db16d47eb909f2bc05d4550177dd87ecc47156f36abbb",
                                "typeString": "literal_string \"there is already a winner\""
                              },
                              "value": "there is already a winner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_522c06332c3de9bbe77db16d47eb909f2bc05d4550177dd87ecc47156f36abbb",
                                "typeString": "literal_string \"there is already a winner\""
                              }
                            ],
                            "id": 153,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2410:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2410:55:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 160,
                        "nodeType": "ExpressionStatement",
                        "src": "2410:55:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 161,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2514:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "2514:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 163,
                              "name": "keyPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "2527:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 164,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 142,
                              "src": "2536:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2527:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2514:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 226,
                          "nodeType": "Block",
                          "src": "2879:245:0",
                          "statements": [
                            {
                              "assignments": [
                                203
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 203,
                                  "mutability": "mutable",
                                  "name": "numerator",
                                  "nameLocation": "2940:9:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 226,
                                  "src": "2935:14:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 202,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2935:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 207,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 204,
                                  "name": "keyPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 26,
                                  "src": "2952:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "313030",
                                  "id": 205,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2961:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "src": "2952:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2935:29:0"
                            },
                            {
                              "assignments": [
                                209
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 209,
                                  "mutability": "mutable",
                                  "name": "tempKeyPrice",
                                  "nameLocation": "2983:12:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 226,
                                  "src": "2978:17:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 208,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2978:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 215,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 214,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 210,
                                  "name": "keyPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 26,
                                  "src": "2998:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 213,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 211,
                                    "name": "numerator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 203,
                                    "src": "3009:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "hexValue": "3130303030",
                                    "id": 212,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3019:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10000_by_1",
                                      "typeString": "int_const 10000"
                                    },
                                    "value": "10000"
                                  },
                                  "src": "3009:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2998:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2978:46:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 222,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 217,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "3046:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 218,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "3046:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 221,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 219,
                                        "name": "tempKeyPrice",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 209,
                                        "src": "3059:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 220,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 142,
                                        "src": "3072:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3059:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3046:33:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4e6f7420656e6f75676820746f2062757920746865206b65792873292e",
                                    "id": 223,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3081:31:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_e4a2642d6743116ecdc050df980057ba474cd036421d9a84b9a5cbacffa1d5b0",
                                      "typeString": "literal_string \"Not enough to buy the key(s).\""
                                    },
                                    "value": "Not enough to buy the key(s)."
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_e4a2642d6743116ecdc050df980057ba474cd036421d9a84b9a5cbacffa1d5b0",
                                      "typeString": "literal_string \"Not enough to buy the key(s).\""
                                    }
                                  ],
                                  "id": 216,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "3038:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 224,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3038:75:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 225,
                              "nodeType": "ExpressionStatement",
                              "src": "3038:75:0"
                            }
                          ]
                        },
                        "id": 227,
                        "nodeType": "IfStatement",
                        "src": "2510:614:0",
                        "trueBody": {
                          "id": 201,
                          "nodeType": "Block",
                          "src": "2545:328:0",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 167,
                                  "name": "keyPurchases",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 47,
                                  "src": "2563:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "hexValue": "353030",
                                  "id": 168,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2578:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_500_by_1",
                                    "typeString": "int_const 500"
                                  },
                                  "value": "500"
                                },
                                "src": "2563:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 199,
                                "nodeType": "Block",
                                "src": "2706:116:0",
                                "statements": [
                                  {
                                    "assignments": [
                                      186
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 186,
                                        "mutability": "mutable",
                                        "name": "numerator",
                                        "nameLocation": "2729:9:0",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 199,
                                        "src": "2724:14:0",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 185,
                                          "name": "uint",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2724:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 190,
                                    "initialValue": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 189,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 187,
                                        "name": "keyPrice",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26,
                                        "src": "2741:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "hexValue": "3530",
                                        "id": 188,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2750:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_50_by_1",
                                          "typeString": "int_const 50"
                                        },
                                        "value": "50"
                                      },
                                      "src": "2741:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2724:28:0"
                                  },
                                  {
                                    "expression": {
                                      "id": 197,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 191,
                                        "name": "keyPrice",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26,
                                        "src": "2770:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 196,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 192,
                                          "name": "keyPrice",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 26,
                                          "src": "2781:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 195,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 193,
                                            "name": "numerator",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 186,
                                            "src": "2792:9:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "/",
                                          "rightExpression": {
                                            "hexValue": "3130303030",
                                            "id": 194,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2802:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10000_by_1",
                                              "typeString": "int_const 10000"
                                            },
                                            "value": "10000"
                                          },
                                          "src": "2792:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "2781:26:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "2770:37:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 198,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2770:37:0"
                                  }
                                ]
                              },
                              "id": 200,
                              "nodeType": "IfStatement",
                              "src": "2559:263:0",
                              "trueBody": {
                                "id": 184,
                                "nodeType": "Block",
                                "src": "2583:117:0",
                                "statements": [
                                  {
                                    "assignments": [
                                      171
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 171,
                                        "mutability": "mutable",
                                        "name": "numerator",
                                        "nameLocation": "2606:9:0",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 184,
                                        "src": "2601:14:0",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 170,
                                          "name": "uint",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2601:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 175,
                                    "initialValue": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 174,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 172,
                                        "name": "keyPrice",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26,
                                        "src": "2618:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "hexValue": "313030",
                                        "id": 173,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2627:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        },
                                        "value": "100"
                                      },
                                      "src": "2618:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2601:29:0"
                                  },
                                  {
                                    "expression": {
                                      "id": 182,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 176,
                                        "name": "keyPrice",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26,
                                        "src": "2648:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 181,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 177,
                                          "name": "keyPrice",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 26,
                                          "src": "2659:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 180,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 178,
                                            "name": "numerator",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 171,
                                            "src": "2670:9:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "/",
                                          "rightExpression": {
                                            "hexValue": "3130303030",
                                            "id": 179,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2680:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10000_by_1",
                                              "typeString": "int_const 10000"
                                            },
                                            "value": "10000"
                                          },
                                          "src": "2670:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "2659:26:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "2648:37:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 183,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2648:37:0"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          229
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 229,
                            "mutability": "mutable",
                            "name": "devShareNumerator",
                            "nameLocation": "3139:17:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 338,
                            "src": "3134:22:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 228,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3134:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 234,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 230,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3159:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "3159:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3169:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "3159:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3134:38:0"
                      },
                      {
                        "assignments": [
                          236
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 236,
                            "mutability": "mutable",
                            "name": "devShare",
                            "nameLocation": "3187:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 338,
                            "src": "3182:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 235,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3182:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 240,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 237,
                            "name": "devShareNumerator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 229,
                            "src": "3198:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3130303030",
                            "id": 238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3216:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          },
                          "src": "3198:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3182:39:0"
                      },
                      {
                        "assignments": [
                          242
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 242,
                            "mutability": "mutable",
                            "name": "gameShare",
                            "nameLocation": "3236:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 338,
                            "src": "3231:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 241,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3231:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 247,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 243,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3248:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "3248:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 245,
                            "name": "devShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "3260:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3248:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3231:37:0"
                      },
                      {
                        "assignments": [
                          249
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 249,
                            "mutability": "mutable",
                            "name": "floor",
                            "nameLocation": "3283:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 338,
                            "src": "3278:10:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 248,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3278:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 253,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 250,
                            "name": "gameShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "3291:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3301:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "3291:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3278:24:0"
                      },
                      {
                        "expression": {
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 254,
                            "name": "developerOnePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "3312:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 255,
                            "name": "devShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "3335:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3312:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 257,
                        "nodeType": "ExpressionStatement",
                        "src": "3312:31:0"
                      },
                      {
                        "expression": {
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 258,
                            "name": "jackpot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "3353:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 259,
                            "name": "floor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 249,
                            "src": "3364:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3353:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 261,
                        "nodeType": "ExpressionStatement",
                        "src": "3353:16:0"
                      },
                      {
                        "expression": {
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 262,
                            "name": "divPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "3379:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 263,
                              "name": "gameShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 242,
                              "src": "3390:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 264,
                              "name": "floor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 249,
                              "src": "3402:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3390:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3379:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 267,
                        "nodeType": "ExpressionStatement",
                        "src": "3379:28:0"
                      },
                      {
                        "expression": {
                          "id": 274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 268,
                                "name": "divTracker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67,
                                "src": "3418:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Divvies_$62_storage_$",
                                  "typeString": "mapping(address => struct FomoOE.Divvies storage ref)"
                                }
                              },
                              "id": 271,
                              "indexExpression": {
                                "expression": {
                                  "id": 269,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3429:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3429:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3418:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Divvies_$62_storage",
                                "typeString": "struct FomoOE.Divvies storage ref"
                              }
                            },
                            "id": 272,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "_keyBalance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 53,
                            "src": "3418:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 273,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 142,
                            "src": "3456:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3418:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 275,
                        "nodeType": "ExpressionStatement",
                        "src": "3418:45:0"
                      },
                      {
                        "expression": {
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 276,
                                "name": "divTracker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67,
                                "src": "3473:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Divvies_$62_storage_$",
                                  "typeString": "mapping(address => struct FomoOE.Divvies storage ref)"
                                }
                              },
                              "id": 279,
                              "indexExpression": {
                                "expression": {
                                  "id": 277,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3484:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3484:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3473:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Divvies_$62_storage",
                                "typeString": "struct FomoOE.Divvies storage ref"
                              }
                            },
                            "id": 280,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "_boughtKeys",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61,
                            "src": "3473:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3510:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3473:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 283,
                        "nodeType": "ExpressionStatement",
                        "src": "3473:41:0"
                      },
                      {
                        "expression": {
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 284,
                            "name": "totalKeys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "3524:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 285,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 142,
                            "src": "3537:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3524:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 287,
                        "nodeType": "ExpressionStatement",
                        "src": "3524:20:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 288,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 142,
                              "src": "3558:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3330",
                              "id": 289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3566:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_30_by_1",
                                "typeString": "int_const 30"
                              },
                              "value": "30"
                            },
                            "src": "3558:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3836343030",
                              "id": 291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3571:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "value": "86400"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 295,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 292,
                                    "name": "totalTime",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13,
                                    "src": "3580:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 293,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "3590:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 294,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "3590:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3580:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 296,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3579:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3571:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3558:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 309,
                          "nodeType": "Block",
                          "src": "3709:48:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 307,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 303,
                                  "name": "totalTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "3723:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 306,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 304,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 142,
                                    "src": "3736:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3330",
                                    "id": 305,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3744:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_30_by_1",
                                      "typeString": "int_const 30"
                                    },
                                    "value": "30"
                                  },
                                  "src": "3736:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3723:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 308,
                              "nodeType": "ExpressionStatement",
                              "src": "3723:23:0"
                            }
                          ]
                        },
                        "id": 310,
                        "nodeType": "IfStatement",
                        "src": "3554:203:0",
                        "trueBody": {
                          "id": 302,
                          "nodeType": "Block",
                          "src": "3608:95:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 299,
                                  "name": "letTheGamesBegin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 113,
                                  "src": "3674:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 300,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3674:18:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 301,
                              "nodeType": "ExpressionStatement",
                              "src": "3674:18:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 311,
                            "name": "keyPurchases",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "3767:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3783:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3767:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 314,
                        "nodeType": "ExpressionStatement",
                        "src": "3767:17:0"
                      },
                      {
                        "expression": {
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 315,
                            "name": "winning",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "3794:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 316,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3804:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3804:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3794:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 319,
                        "nodeType": "ExpressionStatement",
                        "src": "3794:20:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 321,
                                  "name": "divTracker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67,
                                  "src": "3843:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Divvies_$62_storage_$",
                                    "typeString": "mapping(address => struct FomoOE.Divvies storage ref)"
                                  }
                                },
                                "id": 324,
                                "indexExpression": {
                                  "expression": {
                                    "id": 322,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3854:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 323,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3854:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3843:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Divvies_$62_storage",
                                  "typeString": "struct FomoOE.Divvies storage ref"
                                }
                              },
                              "id": 325,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "_keyBalance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 53,
                              "src": "3843:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 326,
                              "name": "totalKeys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "3879:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 327,
                              "name": "keyPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "3890:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 328,
                              "name": "divPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "3900:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 329,
                              "name": "jackpot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "3909:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 330,
                              "name": "winning",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "3918:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 320,
                            "name": "keysPurchased",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81,
                            "src": "3829:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,uint256,uint256,address)"
                            }
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3829:97:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 332,
                        "nodeType": "EmitStatement",
                        "src": "3824:102:0"
                      },
                      {
                        "expression": {
                          "id": 336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 333,
                            "name": "blockNumberOfLastKeyPurchase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "3936:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 334,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3967:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "3967:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3936:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 337,
                        "nodeType": "ExpressionStatement",
                        "src": "3936:43:0"
                      }
                    ]
                  },
                  "functionSelector": "78c3171f",
                  "id": 339,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "purchaseKeys",
                  "nameLocation": "2286:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 143,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 142,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "2304:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 339,
                        "src": "2299:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 141,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2299:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2298:14:0"
                  },
                  "returnParameters": {
                    "id": 144,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2328:0:0"
                  },
                  "scope": 639,
                  "src": "2277:1712:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 346,
                    "nodeType": "Block",
                    "src": "6152:31:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 344,
                          "name": "winning",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "6169:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 343,
                        "id": 345,
                        "nodeType": "Return",
                        "src": "6162:14:0"
                      }
                    ]
                  },
                  "functionSelector": "8e7ea5b2",
                  "id": 347,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getWinner",
                  "nameLocation": "6111:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 340,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6120:2:0"
                  },
                  "returnParameters": {
                    "id": 343,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 342,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 347,
                        "src": "6143:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 341,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6143:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6142:9:0"
                  },
                  "scope": 639,
                  "src": "6102:81:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 392,
                    "nodeType": "Block",
                    "src": "6264:672:0",
                    "statements": [
                      {
                        "assignments": [
                          355
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 355,
                            "mutability": "mutable",
                            "name": "tempUserWithdrawAmount",
                            "nameLocation": "6279:22:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 392,
                            "src": "6274:27:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 354,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6274:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 356,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6274:27:0"
                      },
                      {
                        "assignments": [
                          358
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 358,
                            "mutability": "mutable",
                            "name": "tempNumerator",
                            "nameLocation": "6316:13:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 392,
                            "src": "6311:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 357,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6311:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 359,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6311:18:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 360,
                            "name": "totalKeys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "6343:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6356:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6343:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 388,
                          "nodeType": "Block",
                          "src": "6417:472:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 375,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 368,
                                  "name": "tempNumerator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 358,
                                  "src": "6708:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 374,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 369,
                                        "name": "divTracker",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 67,
                                        "src": "6724:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Divvies_$62_storage_$",
                                          "typeString": "mapping(address => struct FomoOE.Divvies storage ref)"
                                        }
                                      },
                                      "id": 371,
                                      "indexExpression": {
                                        "id": 370,
                                        "name": "_userAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 349,
                                        "src": "6735:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6724:24:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Divvies_$62_storage",
                                        "typeString": "struct FomoOE.Divvies storage ref"
                                      }
                                    },
                                    "id": 372,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "_keyBalance",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 53,
                                    "src": "6724:36:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 373,
                                    "name": "divPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 49,
                                    "src": "6763:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "6724:46:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6708:62:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 376,
                              "nodeType": "ExpressionStatement",
                              "src": "6708:62:0"
                            },
                            {
                              "expression": {
                                "id": 386,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 377,
                                  "name": "tempUserWithdrawAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 355,
                                  "src": "6784:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 385,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 380,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 378,
                                      "name": "tempNumerator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 358,
                                      "src": "6809:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "id": 379,
                                      "name": "totalKeys",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45,
                                      "src": "6823:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6809:23:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 381,
                                        "name": "divTracker",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 67,
                                        "src": "6835:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Divvies_$62_storage_$",
                                          "typeString": "mapping(address => struct FomoOE.Divvies storage ref)"
                                        }
                                      },
                                      "id": 383,
                                      "indexExpression": {
                                        "id": 382,
                                        "name": "_userAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 349,
                                        "src": "6846:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6835:24:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Divvies_$62_storage",
                                        "typeString": "struct FomoOE.Divvies storage ref"
                                      }
                                    },
                                    "id": 384,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "_withdrawnAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 57,
                                    "src": "6835:41:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "6809:67:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6784:92:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 387,
                              "nodeType": "ExpressionStatement",
                              "src": "6784:92:0"
                            }
                          ]
                        },
                        "id": 389,
                        "nodeType": "IfStatement",
                        "src": "6339:550:0",
                        "trueBody": {
                          "id": 367,
                          "nodeType": "Block",
                          "src": "6360:51:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 365,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 363,
                                  "name": "tempUserWithdrawAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 355,
                                  "src": "6374:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 364,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6399:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "6374:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 366,
                              "nodeType": "ExpressionStatement",
                              "src": "6374:26:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 390,
                          "name": "tempUserWithdrawAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 355,
                          "src": "6907:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 353,
                        "id": 391,
                        "nodeType": "Return",
                        "src": "6900:29:0"
                      }
                    ]
                  },
                  "functionSelector": "acf7084a",
                  "id": 393,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateDivvies",
                  "nameLocation": "6202:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 350,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 349,
                        "mutability": "mutable",
                        "name": "_userAddress",
                        "nameLocation": "6224:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 393,
                        "src": "6216:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 348,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6216:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6215:22:0"
                  },
                  "returnParameters": {
                    "id": 353,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 352,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 393,
                        "src": "6258:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 351,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6258:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6257:6:0"
                  },
                  "scope": 639,
                  "src": "6193:743:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 463,
                    "nodeType": "Block",
                    "src": "6980:878:0",
                    "statements": [
                      {
                        "assignments": [
                          397
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 397,
                            "mutability": "mutable",
                            "name": "to",
                            "nameLocation": "7006:2:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 463,
                            "src": "6990:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 396,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6990:15:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 403,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 400,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7019:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7019:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7011:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 398,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7011:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7011:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6990:40:0"
                      },
                      {
                        "assignments": [
                          405
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 405,
                            "mutability": "mutable",
                            "name": "tempUserWithdrawAmount",
                            "nameLocation": "7045:22:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 463,
                            "src": "7040:27:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 404,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7040:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 406,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7040:27:0"
                      },
                      {
                        "assignments": [
                          408
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 408,
                            "mutability": "mutable",
                            "name": "tempNumerator",
                            "nameLocation": "7082:13:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 463,
                            "src": "7077:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 407,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7077:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 409,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7077:18:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 410,
                            "name": "totalKeys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "7109:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7122:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7109:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 448,
                          "nodeType": "Block",
                          "src": "7183:545:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 426,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 418,
                                  "name": "tempNumerator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 408,
                                  "src": "7474:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 425,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 419,
                                        "name": "divTracker",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 67,
                                        "src": "7490:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Divvies_$62_storage_$",
                                          "typeString": "mapping(address => struct FomoOE.Divvies storage ref)"
                                        }
                                      },
                                      "id": 422,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 420,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "7501:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 421,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "7501:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7490:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Divvies_$62_storage",
                                        "typeString": "struct FomoOE.Divvies storage ref"
                                      }
                                    },
                                    "id": 423,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "_keyBalance",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 53,
                                    "src": "7490:34:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 424,
                                    "name": "divPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 49,
                                    "src": "7527:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "7490:44:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7474:60:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 427,
                              "nodeType": "ExpressionStatement",
                              "src": "7474:60:0"
                            },
                            {
                              "expression": {
                                "id": 438,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 428,
                                  "name": "tempUserWithdrawAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 405,
                                  "src": "7548:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 437,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 431,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 429,
                                      "name": "tempNumerator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 408,
                                      "src": "7573:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "id": 430,
                                      "name": "totalKeys",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45,
                                      "src": "7587:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7573:23:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 432,
                                        "name": "divTracker",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 67,
                                        "src": "7599:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Divvies_$62_storage_$",
                                          "typeString": "mapping(address => struct FomoOE.Divvies storage ref)"
                                        }
                                      },
                                      "id": 435,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 433,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "7610:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 434,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "7610:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7599:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Divvies_$62_storage",
                                        "typeString": "struct FomoOE.Divvies storage ref"
                                      }
                                    },
                                    "id": 436,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "_withdrawnAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 57,
                                    "src": "7599:39:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "7573:65:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7548:90:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 439,
                              "nodeType": "ExpressionStatement",
                              "src": "7548:90:0"
                            },
                            {
                              "expression": {
                                "id": 446,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 440,
                                      "name": "divTracker",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 67,
                                      "src": "7652:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Divvies_$62_storage_$",
                                        "typeString": "mapping(address => struct FomoOE.Divvies storage ref)"
                                      }
                                    },
                                    "id": 443,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 441,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "7663:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 442,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "7663:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7652:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Divvies_$62_storage",
                                      "typeString": "struct FomoOE.Divvies storage ref"
                                    }
                                  },
                                  "id": 444,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "_withdrawnAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 57,
                                  "src": "7652:39:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 445,
                                  "name": "tempUserWithdrawAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 405,
                                  "src": "7695:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7652:65:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 447,
                              "nodeType": "ExpressionStatement",
                              "src": "7652:65:0"
                            }
                          ]
                        },
                        "id": 449,
                        "nodeType": "IfStatement",
                        "src": "7105:623:0",
                        "trueBody": {
                          "id": 417,
                          "nodeType": "Block",
                          "src": "7126:51:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 415,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 413,
                                  "name": "tempUserWithdrawAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 405,
                                  "src": "7140:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 414,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7165:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "7140:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 416,
                              "nodeType": "ExpressionStatement",
                              "src": "7140:26:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 451,
                                "name": "tempUserWithdrawAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 405,
                                "src": "7747:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7772:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7747:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f752068617665206e6f206469767669657320746f20636c61696d",
                              "id": 454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7775:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8f0a5b00b8225a5e8198f4e874c9e02f62342eac6069582c6a91ffd83caaf530",
                                "typeString": "literal_string \"You have no divvies to claim\""
                              },
                              "value": "You have no divvies to claim"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8f0a5b00b8225a5e8198f4e874c9e02f62342eac6069582c6a91ffd83caaf530",
                                "typeString": "literal_string \"You have no divvies to claim\""
                              }
                            ],
                            "id": 450,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7739:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7739:67:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 456,
                        "nodeType": "ExpressionStatement",
                        "src": "7739:67:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 460,
                              "name": "tempUserWithdrawAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 405,
                              "src": "7828:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 457,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 397,
                              "src": "7816:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "7816:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7816:35:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 462,
                        "nodeType": "ExpressionStatement",
                        "src": "7816:35:0"
                      }
                    ]
                  },
                  "functionSelector": "1ebe585d",
                  "id": 464,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawDivvies",
                  "nameLocation": "6955:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 394,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6970:2:0"
                  },
                  "returnParameters": {
                    "id": 395,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6980:0:0"
                  },
                  "scope": 639,
                  "src": "6946:912:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 507,
                    "nodeType": "Block",
                    "src": "7896:286:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 468,
                                  "name": "getTimeLeft",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 140,
                                  "src": "7914:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7914:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 470,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7931:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7914:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "67616d65206973207374696c6c20696e20706c6179",
                              "id": 472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7934:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_189b26b2dc90a204b6258fd8aaa92fc58bf3fc8bae348d1855018a313099dab4",
                                "typeString": "literal_string \"game is still in play\""
                              },
                              "value": "game is still in play"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_189b26b2dc90a204b6258fd8aaa92fc58bf3fc8bae348d1855018a313099dab4",
                                "typeString": "literal_string \"game is still in play\""
                              }
                            ],
                            "id": 467,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7906:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7906:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 474,
                        "nodeType": "ExpressionStatement",
                        "src": "7906:52:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 476,
                                "name": "jackpot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51,
                                "src": "7976:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 477,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7986:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7976:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f206d6f6e657920696e206a61636b706f74",
                              "id": 479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7989:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bd5506de9cb58dacf5247236c502bc897ec13592d240dce45ccaa50c52ed207a",
                                "typeString": "literal_string \"No money in jackpot\""
                              },
                              "value": "No money in jackpot"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bd5506de9cb58dacf5247236c502bc897ec13592d240dce45ccaa50c52ed207a",
                                "typeString": "literal_string \"No money in jackpot\""
                              }
                            ],
                            "id": 475,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7968:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7968:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 481,
                        "nodeType": "ExpressionStatement",
                        "src": "7968:43:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 483,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8029:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 484,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "8029:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 485,
                                "name": "winning",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17,
                                "src": "8043:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "8029:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "796f7520617265206e6f74207468652077696e6e6572",
                              "id": 487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8052:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1bb9b6f0233d18f6ea56f6ba6b39bdcd37958431528a8ef0e15c119c52254f5e",
                                "typeString": "literal_string \"you are not the winner\""
                              },
                              "value": "you are not the winner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1bb9b6f0233d18f6ea56f6ba6b39bdcd37958431528a8ef0e15c119c52254f5e",
                                "typeString": "literal_string \"you are not the winner\""
                              }
                            ],
                            "id": 482,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8021:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8021:56:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 489,
                        "nodeType": "ExpressionStatement",
                        "src": "8021:56:0"
                      },
                      {
                        "assignments": [
                          491
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 491,
                            "mutability": "mutable",
                            "name": "to",
                            "nameLocation": "8103:2:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 507,
                            "src": "8087:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 490,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8087:15:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 496,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 494,
                              "name": "winning",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "8116:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8108:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 492,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8108:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8108:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8087:37:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 500,
                              "name": "jackpot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "8146:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 497,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 491,
                              "src": "8134:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "8134:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8134:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 502,
                        "nodeType": "ExpressionStatement",
                        "src": "8134:20:0"
                      },
                      {
                        "expression": {
                          "id": 505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 503,
                            "name": "jackpot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "8164:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8174:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8164:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 506,
                        "nodeType": "ExpressionStatement",
                        "src": "8164:11:0"
                      }
                    ]
                  },
                  "functionSelector": "d20bff02",
                  "id": 508,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "jackpotPayout",
                  "nameLocation": "7873:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 465,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7886:2:0"
                  },
                  "returnParameters": {
                    "id": 466,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7896:0:0"
                  },
                  "scope": 639,
                  "src": "7864:318:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 531,
                    "nodeType": "Block",
                    "src": "8261:140:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 515,
                                "name": "getTimeLeft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 140,
                                "src": "8275:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8275:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8292:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8275:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 519,
                              "name": "_userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 510,
                              "src": "8297:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 520,
                              "name": "winning",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "8313:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "8297:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8275:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 530,
                        "nodeType": "IfStatement",
                        "src": "8271:124:0",
                        "trueBody": {
                          "id": 529,
                          "nodeType": "Block",
                          "src": "8322:73:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 525,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 523,
                                  "name": "winner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 513,
                                  "src": "8336:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 524,
                                  "name": "_userAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 510,
                                  "src": "8345:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "8336:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 526,
                              "nodeType": "ExpressionStatement",
                              "src": "8336:21:0"
                            },
                            {
                              "expression": {
                                "id": 527,
                                "name": "winner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 513,
                                "src": "8378:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "functionReturnParameters": 514,
                              "id": 528,
                              "nodeType": "Return",
                              "src": "8371:13:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "0d153c92",
                  "id": 532,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "whoWon",
                  "nameLocation": "8197:6:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 511,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 510,
                        "mutability": "mutable",
                        "name": "_userAddress",
                        "nameLocation": "8212:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 532,
                        "src": "8204:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 509,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8204:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8203:22:0"
                  },
                  "returnParameters": {
                    "id": 514,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 513,
                        "mutability": "mutable",
                        "name": "winner",
                        "nameLocation": "8254:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 532,
                        "src": "8246:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 512,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8246:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8245:16:0"
                  },
                  "scope": 639,
                  "src": "8188:213:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 587,
                    "nodeType": "Block",
                    "src": "8455:474:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 536,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8473:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 537,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "8473:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 538,
                                "name": "developer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3,
                                "src": "8487:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "8473:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "796f75206172656e27742074686520646576656c6f706572206f66207468697320636f6e74726163742e",
                              "id": 540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8498:44:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cea86a2191cad1e0f0f217b0db1aab60b763877b2f41d4c4c8de22dc3f188de7",
                                "typeString": "literal_string \"you aren't the developer of this contract.\""
                              },
                              "value": "you aren't the developer of this contract."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cea86a2191cad1e0f0f217b0db1aab60b763877b2f41d4c4c8de22dc3f188de7",
                                "typeString": "literal_string \"you aren't the developer of this contract.\""
                              }
                            ],
                            "id": 535,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8465:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8465:78:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 542,
                        "nodeType": "ExpressionStatement",
                        "src": "8465:78:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 544,
                                  "name": "getTimeLeft",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 140,
                                  "src": "8561:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 545,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8561:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 546,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8578:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8561:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "67616d65206973207374696c6c20696e20706c6179",
                              "id": 548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8581:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_189b26b2dc90a204b6258fd8aaa92fc58bf3fc8bae348d1855018a313099dab4",
                                "typeString": "literal_string \"game is still in play\""
                              },
                              "value": "game is still in play"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_189b26b2dc90a204b6258fd8aaa92fc58bf3fc8bae348d1855018a313099dab4",
                                "typeString": "literal_string \"game is still in play\""
                              }
                            ],
                            "id": 543,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8553:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8553:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 550,
                        "nodeType": "ExpressionStatement",
                        "src": "8553:52:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 551,
                            "name": "giveToDeveloper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "8619:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 552,
                            "name": "giveToJackpot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "8638:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8619:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 581,
                          "nodeType": "Block",
                          "src": "8782:108:0",
                          "statements": [
                            {
                              "assignments": [
                                569
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 569,
                                  "mutability": "mutable",
                                  "name": "to",
                                  "nameLocation": "8812:2:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 581,
                                  "src": "8796:18:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  "typeName": {
                                    "id": 568,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8796:15:0",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 574,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 572,
                                    "name": "winning",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 17,
                                    "src": "8825:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 571,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8817:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 570,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8817:8:0",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 573,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8817:16:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8796:37:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 578,
                                    "name": "developerOnePercent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5,
                                    "src": "8859:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 575,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 569,
                                    "src": "8847:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 577,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "8847:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 579,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8847:32:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 580,
                              "nodeType": "ExpressionStatement",
                              "src": "8847:32:0"
                            }
                          ]
                        },
                        "id": 582,
                        "nodeType": "IfStatement",
                        "src": "8615:275:0",
                        "trueBody": {
                          "id": 567,
                          "nodeType": "Block",
                          "src": "8653:123:0",
                          "statements": [
                            {
                              "assignments": [
                                555
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 555,
                                  "mutability": "mutable",
                                  "name": "to",
                                  "nameLocation": "8683:2:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 567,
                                  "src": "8667:18:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  "typeName": {
                                    "id": 554,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8667:15:0",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 560,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 558,
                                    "name": "developer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3,
                                    "src": "8696:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 557,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8688:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 556,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8688:8:0",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 559,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8688:18:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8667:39:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 564,
                                    "name": "developerOnePercent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5,
                                    "src": "8732:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 561,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 555,
                                    "src": "8720:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 563,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "8720:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 565,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8720:32:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 566,
                              "nodeType": "ExpressionStatement",
                              "src": "8720:32:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 583,
                            "name": "developerOnePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "8899:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8921:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8899:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 586,
                        "nodeType": "ExpressionStatement",
                        "src": "8899:23:0"
                      }
                    ]
                  },
                  "functionSelector": "1fd9300d",
                  "id": 588,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "developerOnePercentAllocation",
                  "nameLocation": "8416:29:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 533,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8445:2:0"
                  },
                  "returnParameters": {
                    "id": 534,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8455:0:0"
                  },
                  "scope": 639,
                  "src": "8407:522:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 637,
                    "nodeType": "Block",
                    "src": "8981:360:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 594,
                                    "name": "divTracker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67,
                                    "src": "8999:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Divvies_$62_storage_$",
                                      "typeString": "mapping(address => struct FomoOE.Divvies storage ref)"
                                    }
                                  },
                                  "id": 597,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 595,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "9010:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 596,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "9010:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8999:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Divvies_$62_storage",
                                    "typeString": "struct FomoOE.Divvies storage ref"
                                  }
                                },
                                "id": 598,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "_boughtKeys",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 61,
                                "src": "8999:34:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 599,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9037:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "8999:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "796f75206e65656420746f20627579206174206c65617374206f6e65206b657920746f20766f74652e",
                              "id": 601,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9043:43:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e01b75adec200db3e90481f4ca7d93ac9212b95e491be39172190fceb9c96be3",
                                "typeString": "literal_string \"you need to buy at least one key to vote.\""
                              },
                              "value": "you need to buy at least one key to vote."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e01b75adec200db3e90481f4ca7d93ac9212b95e491be39172190fceb9c96be3",
                                "typeString": "literal_string \"you need to buy at least one key to vote.\""
                              }
                            ],
                            "id": 593,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8991:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8991:96:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 603,
                        "nodeType": "ExpressionStatement",
                        "src": "8991:96:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 605,
                                    "name": "divTracker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67,
                                    "src": "9105:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Divvies_$62_storage_$",
                                      "typeString": "mapping(address => struct FomoOE.Divvies storage ref)"
                                    }
                                  },
                                  "id": 608,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 606,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "9116:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 607,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "9116:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9105:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Divvies_$62_storage",
                                    "typeString": "struct FomoOE.Divvies storage ref"
                                  }
                                },
                                "id": 609,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "_voted",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 59,
                                "src": "9105:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "66616c7365",
                                "id": 610,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9138:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "9105:38:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "796f7520616c726561647920766f7465642e",
                              "id": 612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9145:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b0bde71531240fa9938bc3386428f288c19e834e2b513235e9318a8bad7680dc",
                                "typeString": "literal_string \"you already voted.\""
                              },
                              "value": "you already voted."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b0bde71531240fa9938bc3386428f288c19e834e2b513235e9318a8bad7680dc",
                                "typeString": "literal_string \"you already voted.\""
                              }
                            ],
                            "id": 604,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9097:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9097:69:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 614,
                        "nodeType": "ExpressionStatement",
                        "src": "9097:69:0"
                      },
                      {
                        "expression": {
                          "id": 621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 615,
                                "name": "divTracker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67,
                                "src": "9176:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Divvies_$62_storage_$",
                                  "typeString": "mapping(address => struct FomoOE.Divvies storage ref)"
                                }
                              },
                              "id": 618,
                              "indexExpression": {
                                "expression": {
                                  "id": 616,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "9187:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "9187:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9176:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Divvies_$62_storage",
                                "typeString": "struct FomoOE.Divvies storage ref"
                              }
                            },
                            "id": 619,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "_voted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 59,
                            "src": "9176:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9208:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "9176:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 622,
                        "nodeType": "ExpressionStatement",
                        "src": "9176:36:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 623,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 590,
                            "src": "9226:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
                            "id": 624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9235:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "9226:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 635,
                          "nodeType": "Block",
                          "src": "9292:43:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 631,
                                  "name": "giveToJackpot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9,
                                  "src": "9306:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 632,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9323:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "9306:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 634,
                              "nodeType": "ExpressionStatement",
                              "src": "9306:18:0"
                            }
                          ]
                        },
                        "id": 636,
                        "nodeType": "IfStatement",
                        "src": "9222:113:0",
                        "trueBody": {
                          "id": 630,
                          "nodeType": "Block",
                          "src": "9241:45:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 628,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 626,
                                  "name": "giveToDeveloper",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7,
                                  "src": "9255:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 627,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9274:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "9255:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 629,
                              "nodeType": "ExpressionStatement",
                              "src": "9255:20:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "111d3efb",
                  "id": 638,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "voteForOnePercent",
                  "nameLocation": "8944:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 591,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 590,
                        "mutability": "mutable",
                        "name": "_vote",
                        "nameLocation": "8967:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 638,
                        "src": "8962:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 589,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8962:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8961:12:0"
                  },
                  "returnParameters": {
                    "id": 592,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8981:0:0"
                  },
                  "scope": 639,
                  "src": "8935:406:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 640,
              "src": "57:9287:0",
              "usedErrors": []
            }
          ],
          "src": "32:9316:0"
        },
        "id": 0
      }
    }
  }
}
